# ************************************************************
# Sequel Pro SQL dump
# Version 3408
#
# http://www.sequelpro.com/
# http://code.google.com/p/sequel-pro/
#
# Host: projects.cs.dal.ca (MySQL 5.0.95)
# Database: daedalus_dev
# Generation Time: 2012-07-04 17:08:00 -0300
# ************************************************************


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


# Dump of table dae_course
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_course`;

CREATE TABLE `dae_course` (
  `id` int(11) NOT NULL auto_increment,
  `course_code` varchar(4) NOT NULL,
  `course_number` int(11) NOT NULL,
  `course_name` varchar(150) NOT NULL,
  `course` varchar(9) default NULL,
  `mapped` tinyint(4) NOT NULL default '0',
  `viewable` tinyint(4) NOT NULL default '1',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=119 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_course` WRITE;
/*!40000 ALTER TABLE `dae_course` DISABLE KEYS */;

INSERT INTO `dae_course` (`id`, `course_code`, `course_number`, `course_name`, `course`, `mapped`, `viewable`)
VALUES
	(106,'CSCI',8891,'COOP Workterm I','CSCI 8891',0,1),
	(105,'CSCI',8890,'Professional Development Workshop','CSCI 8890',0,1),
	(53,'MATH',2030,'Linear Algebra','MATH 2030',0,1),
	(99,'INFX',2690,'Integrated Studies 1','INFX 2690',1,1),
	(101,'INFX',3600,'Integrated Studies 3','INFX 3600',1,1),
	(100,'INFX',2691,'Integrated Studies 2','INFX 2691',1,1),
	(97,'PREU',0,'Pre-University Skills','PREU 0000',1,1),
	(102,'INFX',3601,'Integrated Studies 4','INFX 3601',1,1),
	(35,'MATH',1010,'Different/Integral Calculus','MATH 1010',0,1),
	(33,'MATH',1000,'Differential & Integral Calculus','MATH 1000',0,1),
	(103,'INFX',4600,'Integrated Studies 5','INFX 4600',1,1),
	(104,'INFX',4601,'Integrated Studies 6','INFX 4601',1,1),
	(30,'CSCI',3172,'Web-Centric Computing','CSCI 3172',0,1),
	(29,'CSCI',3171,'Network Computing','CSCI 3171',1,1),
	(28,'CSCI',3162,'Digital Media','CSCI 3162',0,1),
	(27,'CSCI',3161,'Computer Animation','CSCI 3161',0,1),
	(26,'CSCI',3160,'User Interface Design','CSCI 3160',1,1),
	(25,'CSCI',3154,'Introduction to Artificial Intelligence With Gaming Application','CSCI 3154',0,1),
	(24,'CSCI',3151,'Web Intelligence','CSCI 3151',0,1),
	(22,'CSCI',3136,'Principles of Programming Languages','CSCI 3136',1,1),
	(21,'CSCI',3132,'Object Orientation and Generic Programming','CSCI 3132',1,1),
	(20,'CSCI',3130,'Software Engineering','CSCI 3130',1,1),
	(19,'CSCI',3120,'Operating Systems','CSCI 3120',1,1),
	(18,'CSCI',3110,'Design And Analysis Of Algorithms I','CSCI 3110',1,1),
	(17,'CSCI',3101,'Social/Ethical/Professional Issues in Computer Science','CSCI 3101',1,1),
	(16,'INFX',2601,'Introduction to Information Security','INFX 2601',1,1),
	(15,'CSCI',2141,'Introduction to Database Systems','CSCI 2141',1,1),
	(14,'CSCI',2132,'Software Development','CSCI 2132',1,1),
	(13,'CSCI',2121,'Introduction to Computer Organization With Assembly Language','CSCI 2121',1,1),
	(12,'CSCI',2113,'Discrete Structures II','CSCI 2113',0,1),
	(11,'CSCI',2112,'Discrete Structures I','CSCI 2112',1,1),
	(10,'CSCI',2110,'Computer Science III','CSCI 2110',1,1),
	(9,'CSCI',2100,'Communication Skills: Oral/Written','CSCI 2100',1,1),
	(110,'INFX',1606,'An Introduction To Website Creation','INFX 1606',1,1),
	(5,'CSCI',1107,'Social Computing','CSCI 1107',1,1),
	(2,'CSCI',1101,'Computer Science II','CSCI 1101',1,1),
	(4,'CSCI',1106,'Animated Computing','CSCI 1106',1,1),
	(107,'CSCI',8892,'COOP Workterm II','CSCI 8892',0,1),
	(108,'CSCI',8893,'COOP Workterm III','CSCI 8893',0,1),
	(109,'CSCI',3190,'Community Outreach','CSCI 3190',0,1),
	(79,'STAT',2060,'Introduction To Probability & Statistics','STAT 2060',0,1),
	(80,'CSCI',4180,'Introduction To Computational Biology And Bioinformatics','CSCI 4180',1,1),
	(1,'CSCI',1100,'Computer Science I','CSCI 1100',0,1),
	(94,'INFX',1615,'Concepts Of Computing','INFX 1615',1,1),
	(96,'INFX',1616,'Applications Of Computing','INFX 1616',1,1),
	(111,'INFX',2670,'Introduction To Server-side Scripting','INFX 2670',1,1),
	(114,'CSCI',4176,'Mobile Computing','CSCI 4176',1,1),
	(112,'CSCI',4140,'Advanced Database Systems','CSCI 4140',0,1),
	(118,'CSCI',5432,'Being Elmo','CSCI 5432',0,1);

/*!40000 ALTER TABLE `dae_course` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_course_alias
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_course_alias`;

CREATE TABLE `dae_course_alias` (
  `id` int(11) NOT NULL auto_increment,
  `parent_id` int(11) NOT NULL,
  `alias_code` varchar(4) NOT NULL,
  `alias_number` int(11) NOT NULL,
  `alias_course` varchar(9) default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_course_alias` WRITE;
/*!40000 ALTER TABLE `dae_course_alias` DISABLE KEYS */;

INSERT INTO `dae_course_alias` (`id`, `parent_id`, `alias_code`, `alias_number`, `alias_course`)
VALUES
	(11,12,'MATH',2113,'MATH 2113'),
	(10,11,'MATH',2112,'MATH 2112'),
	(13,102,'CSCI',3191,'CSCI 3191'),
	(14,15,'INFX',2640,'INFX 2640'),
	(15,110,'CSCI',1206,'CSCI 1206'),
	(16,111,'CSCI',2170,'CSCI 2170');

/*!40000 ALTER TABLE `dae_course_alias` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_course_coreqs
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_course_coreqs`;

CREATE TABLE `dae_course_coreqs` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `parent_id` smallint(5) unsigned NOT NULL,
  `coreq_id` smallint(6) NOT NULL,
  `coreq_course` varchar(9) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_course_coreqs` WRITE;
/*!40000 ALTER TABLE `dae_course_coreqs` DISABLE KEYS */;

INSERT INTO `dae_course_coreqs` (`id`, `parent_id`, `coreq_id`, `coreq_course`)
VALUES
	(1,13,11,'CSCI 2112'),
	(2,13,14,'CSCI 2132'),
	(3,30,29,'CSCI 3171'),
	(4,111,15,'CSCI 2141');

/*!40000 ALTER TABLE `dae_course_coreqs` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_course_exclusions
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_course_exclusions`;

CREATE TABLE `dae_course_exclusions` (
  `id` int(11) NOT NULL auto_increment,
  `parent_id` smallint(5) unsigned NOT NULL,
  `exclusion_id` int(10) unsigned NOT NULL,
  `exclusion_course` varchar(9) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;



# Dump of table dae_course_other_prereq
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_course_other_prereq`;

CREATE TABLE `dae_course_other_prereq` (
  `id` int(11) NOT NULL auto_increment,
  `course_id` int(11) NOT NULL,
  `prereq` varchar(100) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=288 DEFAULT CHARSET=utf8;



# Dump of table dae_course_slo
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_course_slo`;

CREATE TABLE `dae_course_slo` (
  `id` int(11) NOT NULL auto_increment,
  `course_id` int(11) NOT NULL,
  `slo_id` int(11) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=696 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_course_slo` WRITE;
/*!40000 ALTER TABLE `dae_course_slo` DISABLE KEYS */;

INSERT INTO `dae_course_slo` (`id`, `course_id`, `slo_id`)
VALUES
	(131,14,105),
	(647,16,553),
	(649,16,555),
	(654,16,559),
	(17,80,24),
	(18,80,23),
	(19,80,25),
	(23,80,28),
	(22,80,26),
	(24,80,29),
	(25,80,30),
	(26,80,31),
	(27,80,33),
	(28,80,32),
	(29,80,34),
	(30,80,36),
	(31,80,37),
	(32,80,38),
	(33,80,39),
	(34,80,40),
	(134,14,108),
	(650,16,556),
	(193,2,120),
	(133,14,107),
	(644,97,550),
	(648,16,554),
	(137,14,111),
	(138,14,112),
	(641,14,110),
	(646,16,552),
	(141,14,115),
	(142,14,116),
	(144,14,118),
	(145,5,23),
	(174,19,148),
	(417,15,346),
	(173,19,147),
	(177,19,152),
	(171,19,145),
	(170,19,144),
	(180,19,156),
	(179,19,155),
	(181,19,158),
	(182,19,159),
	(172,19,146),
	(176,19,151),
	(175,19,149),
	(183,19,160),
	(184,19,161),
	(185,19,150),
	(186,19,157),
	(187,19,153),
	(350,11,313),
	(349,11,312),
	(362,10,325),
	(348,11,311),
	(346,11,309),
	(694,14,580),
	(628,14,298),
	(347,11,310),
	(484,9,402),
	(483,9,401),
	(482,9,400),
	(481,9,399),
	(690,11,590),
	(480,13,398),
	(479,13,397),
	(478,13,396),
	(477,13,395),
	(476,13,394),
	(297,94,264),
	(475,13,393),
	(474,13,392),
	(473,13,391),
	(472,13,390),
	(471,13,389),
	(414,2,343),
	(416,2,345),
	(217,1,189),
	(422,15,351),
	(361,14,324),
	(415,2,344),
	(221,1,192),
	(412,2,341),
	(223,1,194),
	(224,1,195),
	(225,1,196),
	(226,1,197),
	(227,1,198),
	(228,1,199),
	(229,1,200),
	(413,2,342),
	(231,1,202),
	(421,15,350),
	(420,15,349),
	(234,2,205),
	(418,15,347),
	(419,15,348),
	(237,2,208),
	(238,2,209),
	(239,2,210),
	(240,2,211),
	(241,2,212),
	(242,2,213),
	(243,2,214),
	(244,2,215),
	(245,2,216),
	(470,13,388),
	(247,2,217),
	(469,13,387),
	(468,13,386),
	(467,13,385),
	(251,4,219),
	(252,4,221),
	(253,4,222),
	(254,4,223),
	(255,4,224),
	(256,4,225),
	(257,4,226),
	(258,4,227),
	(259,4,228),
	(260,4,229),
	(261,4,230),
	(262,4,231),
	(263,4,232),
	(264,4,233),
	(265,4,234),
	(266,4,235),
	(267,4,236),
	(268,4,220),
	(269,5,238),
	(270,5,239),
	(271,5,240),
	(272,5,241),
	(273,5,242),
	(274,5,243),
	(275,5,244),
	(276,5,245),
	(277,5,246),
	(278,5,247),
	(279,5,248),
	(280,5,249),
	(687,1,594),
	(686,2,593),
	(283,5,252),
	(284,94,253),
	(285,94,254),
	(286,94,255),
	(645,16,551),
	(288,10,256),
	(289,10,257),
	(290,10,258),
	(291,10,259),
	(292,10,260),
	(293,94,261),
	(294,94,262),
	(295,94,263),
	(466,13,384),
	(298,94,265),
	(299,94,266),
	(300,94,267),
	(301,94,268),
	(302,94,269),
	(303,94,270),
	(304,94,271),
	(305,94,272),
	(306,94,273),
	(307,94,274),
	(642,96,275),
	(643,96,276),
	(310,94,277),
	(311,94,278),
	(312,10,279),
	(313,10,280),
	(314,10,281),
	(315,10,282),
	(316,10,283),
	(317,10,284),
	(401,1,332),
	(319,10,286),
	(566,18,479),
	(321,10,288),
	(322,10,289),
	(323,10,290),
	(324,96,291),
	(325,96,292),
	(326,96,293),
	(327,96,294),
	(328,96,295),
	(329,96,296),
	(330,96,298),
	(331,96,299),
	(332,96,300),
	(333,96,301),
	(334,96,302),
	(335,96,303),
	(336,96,304),
	(337,96,305),
	(338,96,306),
	(339,96,307),
	(340,96,308),
	(485,9,403),
	(342,96,297),
	(684,1,587),
	(689,18,596),
	(345,97,184),
	(351,11,314),
	(352,11,315),
	(353,11,316),
	(354,11,317),
	(355,11,318),
	(356,11,319),
	(521,111,436),
	(364,99,234),
	(365,100,234),
	(366,101,234),
	(367,102,234),
	(368,103,234),
	(369,104,234),
	(370,103,327),
	(371,104,327),
	(372,99,328),
	(373,100,328),
	(374,101,328),
	(375,102,328),
	(376,103,328),
	(377,104,328),
	(378,99,329),
	(379,100,329),
	(380,101,329),
	(381,102,329),
	(382,103,329),
	(383,104,329),
	(384,99,254),
	(385,100,254),
	(386,101,254),
	(387,102,254),
	(388,103,254),
	(389,104,254),
	(390,99,308),
	(391,100,308),
	(392,101,308),
	(393,102,308),
	(394,103,308),
	(395,104,308),
	(396,103,330),
	(397,104,330),
	(398,1,331),
	(465,13,383),
	(400,94,331),
	(402,94,332),
	(403,1,333),
	(404,1,334),
	(405,1,335),
	(406,1,337),
	(407,1,338),
	(693,1,580),
	(409,94,339),
	(410,1,340),
	(411,94,340),
	(423,15,352),
	(424,15,353),
	(425,15,354),
	(426,15,355),
	(427,15,356),
	(428,15,357),
	(429,15,358),
	(430,15,359),
	(431,15,360),
	(432,15,361),
	(433,15,362),
	(434,15,363),
	(435,15,364),
	(436,15,365),
	(437,15,366),
	(438,15,367),
	(439,20,299),
	(440,20,368),
	(441,20,302),
	(442,20,369),
	(443,20,370),
	(444,20,371),
	(445,20,372),
	(446,20,373),
	(447,20,298),
	(448,20,374),
	(449,20,375),
	(450,20,376),
	(451,20,377),
	(452,20,378),
	(453,20,379),
	(454,20,380),
	(455,20,381),
	(456,20,234),
	(457,1,191),
	(458,94,22),
	(459,2,119),
	(464,13,382),
	(461,94,188),
	(462,80,35),
	(463,97,253),
	(487,9,405),
	(488,9,406),
	(489,9,407),
	(490,9,408),
	(491,9,409),
	(492,17,410),
	(493,17,411),
	(494,17,412),
	(495,17,413),
	(496,17,414),
	(497,19,415),
	(498,19,416),
	(499,19,417),
	(500,110,418),
	(501,110,419),
	(502,110,420),
	(503,110,421),
	(504,110,422),
	(505,110,423),
	(506,110,424),
	(507,110,425),
	(508,110,426),
	(691,18,599),
	(510,110,223),
	(511,110,221),
	(512,110,427),
	(513,110,428),
	(514,111,429),
	(515,111,430),
	(516,111,431),
	(517,111,432),
	(518,111,433),
	(519,111,434),
	(520,111,435),
	(522,111,437),
	(523,111,438),
	(524,111,439),
	(525,21,440),
	(526,21,441),
	(536,21,442),
	(528,21,443),
	(529,21,444),
	(530,21,445),
	(531,21,446),
	(532,21,447),
	(533,21,448),
	(534,21,449),
	(535,21,450),
	(537,21,451),
	(538,21,452),
	(539,21,453),
	(540,21,454),
	(541,21,455),
	(542,21,456),
	(543,21,457),
	(692,10,601),
	(545,22,458),
	(546,22,459),
	(547,22,460),
	(548,22,461),
	(549,22,462),
	(550,22,463),
	(551,22,464),
	(552,22,465),
	(553,22,466),
	(554,22,467),
	(555,22,468),
	(556,22,469),
	(557,22,470),
	(558,22,471),
	(559,22,472),
	(560,22,473),
	(561,22,474),
	(562,22,475),
	(563,22,476),
	(564,22,477),
	(565,22,478),
	(567,18,480),
	(625,14,535),
	(569,18,482),
	(570,18,483),
	(571,18,484),
	(572,18,485),
	(573,18,486),
	(574,18,487),
	(575,18,488),
	(623,14,533),
	(577,18,490),
	(627,14,537),
	(629,14,538),
	(622,18,284),
	(630,14,539),
	(582,18,495),
	(583,18,496),
	(624,14,534),
	(602,29,513),
	(586,18,499),
	(587,18,500),
	(589,26,501),
	(590,26,502),
	(591,26,503),
	(592,26,504),
	(593,26,505),
	(594,26,506),
	(595,26,507),
	(596,26,508),
	(597,26,509),
	(598,26,510),
	(599,26,511),
	(600,26,512),
	(603,29,514),
	(604,29,515),
	(685,1,590),
	(606,29,517),
	(607,29,518),
	(608,29,519),
	(609,29,520),
	(610,29,521),
	(611,29,522),
	(612,29,523),
	(613,29,524),
	(614,29,525),
	(615,29,526),
	(616,29,527),
	(617,29,528),
	(618,29,529),
	(619,79,530),
	(620,79,531),
	(621,79,532),
	(631,14,540),
	(632,14,541),
	(633,14,542),
	(634,14,543),
	(635,14,544),
	(636,14,545),
	(637,14,546),
	(638,14,547),
	(639,14,548),
	(640,14,549),
	(652,16,557),
	(653,16,558),
	(655,16,560),
	(656,16,561),
	(657,16,562),
	(658,16,563),
	(659,16,564),
	(660,16,565),
	(661,16,566),
	(662,114,567),
	(663,114,568),
	(664,114,569),
	(665,114,570),
	(666,114,571),
	(667,114,572),
	(668,114,573),
	(669,114,574),
	(670,114,575),
	(671,114,576),
	(672,114,577),
	(673,114,578),
	(674,118,481),
	(688,18,592),
	(676,118,296),
	(677,118,579),
	(678,24,421),
	(679,24,422),
	(680,24,418),
	(695,18,603);

/*!40000 ALTER TABLE `dae_course_slo` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_page_help
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_page_help`;

CREATE TABLE `dae_page_help` (
  `id` int(11) NOT NULL auto_increment,
  `page_url` varchar(50) NOT NULL,
  `help_text` blob,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=37 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_page_help` WRITE;
/*!40000 ALTER TABLE `dae_page_help` DISABLE KEYS */;

INSERT INTO `dae_page_help` (`id`, `page_url`, `help_text`)
VALUES
	(1,'daedalus/build/course',NULL),
	(2,'daedalus/manage/slo',NULL),
	(3,'daedalus/browse/course',NULL),
	(4,'daedalus/browse/slo',NULL),
	(5,'daedalus/program/form',NULL),
	(6,'curriculum/manage/student',NULL),
	(7,'curriculum/build/program',NULL),
	(8,'curriculum/browse/course',NULL),
	(9,'curriculum/browse/slo',NULL),
	(10,'curriculum/build/course-code',NULL),
	(11,'curriculum/build/course',NULL),
	(12,'curriculum/browse/term-review',NULL),
	(13,'curriculum/build/goal',NULL),
	(14,'curriculum/advise/session_history',NULL),
	(15,'curriculum/advise/session_log',NULL),
	(16,'curriculum/advise/student',NULL),
	(17,'curriculum/manage/course',NULL),
	(18,'curriculum/manage/slo',NULL),
	(19,'curriculum/manage/tags',NULL),
	(20,'curriculum/program/form',NULL),
	(21,'curriculum/program/map',NULL),
	(22,'curriculum/program/strengths',NULL),
	(23,'curriculum/program/goal',NULL),
	(24,'curriculum/program/nextstep',NULL),
	(25,'curriculum/support/student',NULL),
	(26,'curriculum/support/session_history',NULL),
	(27,'curriculum/support/session_log',NULL),
	(28,'curriculum/browse/graphviz',NULL),
	(29,'curriculum/analyse',NULL),
	(30,'curriculum/build/slo',NULL),
	(31,'curriculum/build/term-review',NULL),
	(32,'curriculum/manage/course-code',NULL),
	(33,'curriculum/manage/program',NULL),
	(34,'curriculum/manage/goal',NULL),
	(35,'curriculum/manage/information',NULL),
	(36,'daedalus/manage/information',X'43757272656E746C79207468657265206973206E6F2068656C7020617661696C61626C6520666F72207468697320706167652E');

/*!40000 ALTER TABLE `dae_page_help` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_prereq_course
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_prereq_course`;

CREATE TABLE `dae_prereq_course` (
  `id` int(11) NOT NULL auto_increment,
  `set_id` int(10) unsigned default '1',
  `course_id` int(11) NOT NULL,
  `prereq_id` int(11) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=282 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_prereq_course` WRITE;
/*!40000 ALTER TABLE `dae_prereq_course` DISABLE KEYS */;

INSERT INTO `dae_prereq_course` (`id`, `set_id`, `course_id`, `prereq_id`)
VALUES
	(262,1,114,29),
	(261,1,114,13),
	(260,1,112,15),
	(258,1,111,1),
	(256,1,21,10),
	(254,1,79,33),
	(248,1,109,15),
	(247,1,109,14),
	(246,1,109,9),
	(245,1,30,15),
	(244,1,28,10),
	(243,1,28,53),
	(242,1,28,33),
	(241,1,27,53),
	(240,1,27,14),
	(239,1,27,10),
	(238,1,25,14),
	(237,1,25,11),
	(236,1,25,10),
	(235,1,24,53),
	(205,1,104,103),
	(188,1,20,14),
	(202,1,101,100),
	(227,1,29,79),
	(215,1,15,1),
	(218,1,106,105),
	(219,1,106,9),
	(220,1,106,10),
	(229,1,22,11),
	(230,1,22,14),
	(231,1,21,14),
	(232,1,24,11),
	(233,1,24,15),
	(234,1,24,79),
	(221,1,106,14),
	(222,1,106,15),
	(223,1,107,106),
	(224,1,108,107),
	(211,1,13,2),
	(201,1,100,99),
	(200,1,99,96),
	(196,1,2,1),
	(257,1,111,110),
	(207,1,35,33),
	(119,1,19,13),
	(118,1,19,14),
	(259,1,14,2),
	(226,1,29,14),
	(209,1,26,10),
	(208,1,26,14),
	(228,1,22,10),
	(56,1,80,79),
	(210,1,19,10),
	(164,1,18,10),
	(55,1,80,14),
	(191,1,12,11),
	(204,1,103,102),
	(199,1,18,11),
	(216,1,20,10),
	(203,1,102,101),
	(225,1,29,10),
	(11,1,10,2),
	(268,2,30,2),
	(269,2,30,9),
	(270,2,30,11),
	(276,2,112,4),
	(275,2,112,2),
	(274,2,112,1),
	(277,2,112,5),
	(278,2,112,10),
	(279,2,112,17),
	(280,1,118,12),
	(281,1,118,19);

/*!40000 ALTER TABLE `dae_prereq_course` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_prereq_slo
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_prereq_slo`;

CREATE TABLE `dae_prereq_slo` (
  `id` int(11) NOT NULL auto_increment,
  `target` int(11) NOT NULL,
  `pre_slo` int(11) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=738 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_prereq_slo` WRITE;
/*!40000 ALTER TABLE `dae_prereq_slo` DISABLE KEYS */;

INSERT INTO `dae_prereq_slo` (`id`, `target`, `pre_slo`)
VALUES
	(203,166,331),
	(204,111,331),
	(124,259,216),
	(16,177,170),
	(17,178,164),
	(18,178,167),
	(19,178,173),
	(20,178,166),
	(21,173,166),
	(22,181,167),
	(23,182,178),
	(200,195,331),
	(25,172,183),
	(26,174,164),
	(27,174,170),
	(197,198,331),
	(29,172,164),
	(30,172,178),
	(31,178,179),
	(645,331,332),
	(33,188,184),
	(277,150,148),
	(35,191,184),
	(271,200,191),
	(274,301,331),
	(199,165,331),
	(201,196,331),
	(202,167,331),
	(270,194,191),
	(198,194,331),
	(43,200,199),
	(196,177,331),
	(276,38,28),
	(269,202,191),
	(47,202,198),
	(301,383,382),
	(286,149,148),
	(648,556,557),
	(290,146,148),
	(289,160,144),
	(288,160,159),
	(647,558,556),
	(454,208,343),
	(219,205,208),
	(284,158,157),
	(58,209,199),
	(59,210,199),
	(60,210,189),
	(61,211,210),
	(62,211,119),
	(63,212,199),
	(64,213,212),
	(65,213,119),
	(66,214,212),
	(67,215,176),
	(68,216,210),
	(69,217,202),
	(282,32,28),
	(71,219,221),
	(72,254,253),
	(73,249,254),
	(74,252,255),
	(75,235,254),
	(268,245,255),
	(458,257,216),
	(78,256,213),
	(456,257,212),
	(80,258,257),
	(81,259,210),
	(82,259,211),
	(457,257,260),
	(84,260,259),
	(85,263,261),
	(86,265,261),
	(87,271,270),
	(88,272,271),
	(89,273,271),
	(90,276,275),
	(91,278,277),
	(92,291,292),
	(93,294,293),
	(94,295,294),
	(95,296,293),
	(96,297,293),
	(97,297,295),
	(98,297,294),
	(99,299,298),
	(100,300,299),
	(101,300,298),
	(102,301,300),
	(275,38,30),
	(104,302,298),
	(105,306,22),
	(106,307,22),
	(107,307,306),
	(108,308,254),
	(181,327,234),
	(110,288,289),
	(111,288,286),
	(505,465,212),
	(655,562,554),
	(114,310,309),
	(115,311,309),
	(729,601,600),
	(117,313,312),
	(118,314,313),
	(728,592,591),
	(727,592,590),
	(726,594,592),
	(122,318,317),
	(123,319,317),
	(125,283,259),
	(654,562,556),
	(653,561,556),
	(129,102,184),
	(616,534,533),
	(131,106,184),
	(660,564,562),
	(659,564,563),
	(664,565,557),
	(663,565,556),
	(662,565,564),
	(137,108,191),
	(638,116,547),
	(652,560,559),
	(140,103,184),
	(661,565,562),
	(639,112,547),
	(646,558,557),
	(144,104,106),
	(658,563,554),
	(146,111,110),
	(147,118,116),
	(148,110,189),
	(149,115,105),
	(150,324,184),
	(151,115,324),
	(152,105,324),
	(153,107,324),
	(154,111,199),
	(155,111,212),
	(156,111,210),
	(657,563,562),
	(158,286,325),
	(159,279,210),
	(160,279,211),
	(161,279,199),
	(162,279,215),
	(163,290,215),
	(164,290,119),
	(165,289,290),
	(166,287,325),
	(464,284,257),
	(168,284,259),
	(169,284,256),
	(170,284,280),
	(465,280,279),
	(172,280,259),
	(173,280,257),
	(174,282,286),
	(175,281,200),
	(176,281,211),
	(469,256,200),
	(178,260,216),
	(179,260,215),
	(283,153,148),
	(182,328,306),
	(183,329,297),
	(184,330,328),
	(281,32,31),
	(195,200,331),
	(656,562,551),
	(206,289,331),
	(207,325,331),
	(208,284,279),
	(209,282,279),
	(210,283,279),
	(211,333,184),
	(642,150,547),
	(724,594,590),
	(215,194,198),
	(216,337,197),
	(217,338,198),
	(218,340,339),
	(220,341,120),
	(221,342,341),
	(222,343,120),
	(223,343,198),
	(224,344,338),
	(225,344,120),
	(226,212,209),
	(227,346,261),
	(228,347,346),
	(229,348,347),
	(230,350,348),
	(231,351,348),
	(232,352,349),
	(233,353,350),
	(234,355,353),
	(235,356,355),
	(236,357,276),
	(237,357,355),
	(238,358,357),
	(239,359,195),
	(240,360,350),
	(241,361,352),
	(242,361,349),
	(243,362,350),
	(244,363,195),
	(245,365,364),
	(246,366,364),
	(247,367,364),
	(248,364,347),
	(249,366,365),
	(250,363,194),
	(251,368,299),
	(252,370,369),
	(253,371,301),
	(254,372,371),
	(255,373,112),
	(256,374,298),
	(257,376,375),
	(258,379,378),
	(259,380,298),
	(260,381,299),
	(261,381,373),
	(262,381,375),
	(263,381,376),
	(264,381,374),
	(265,381,371),
	(266,381,372),
	(267,381,300),
	(272,192,191),
	(273,195,191),
	(291,152,151),
	(292,152,146),
	(293,147,145),
	(294,154,155),
	(644,159,548),
	(650,555,553),
	(649,552,551),
	(298,156,157),
	(651,559,556),
	(643,144,324),
	(302,385,384),
	(303,386,385),
	(304,387,385),
	(305,388,387),
	(306,388,382),
	(307,389,382),
	(308,389,385),
	(315,393,202),
	(310,391,388),
	(311,392,388),
	(312,392,386),
	(314,393,392),
	(316,394,392),
	(317,395,394),
	(318,395,389),
	(319,395,392),
	(320,396,393),
	(321,396,202),
	(322,396,392),
	(323,397,396),
	(324,397,392),
	(325,398,396),
	(326,398,393),
	(327,398,202),
	(328,384,319),
	(329,398,397),
	(330,155,389),
	(331,157,389),
	(332,157,392),
	(333,157,394),
	(334,151,392),
	(335,147,394),
	(336,145,394),
	(337,145,392),
	(338,148,396),
	(339,148,389),
	(340,148,392),
	(341,161,160),
	(342,400,253),
	(343,400,401),
	(344,403,402),
	(345,399,403),
	(346,400,405),
	(347,403,405),
	(348,406,234),
	(349,406,253),
	(350,407,253),
	(351,407,22),
	(352,407,255),
	(353,408,253),
	(354,412,410),
	(355,413,412),
	(356,414,413),
	(357,415,151),
	(358,416,151),
	(359,417,151),
	(360,417,415),
	(361,150,415),
	(362,150,416),
	(363,416,152),
	(364,419,184),
	(365,420,418),
	(366,420,419),
	(367,421,419),
	(368,421,418),
	(369,422,421),
	(370,422,419),
	(371,423,421),
	(372,423,419),
	(373,424,421),
	(374,425,421),
	(375,427,421),
	(376,428,221),
	(377,429,202),
	(378,430,304),
	(379,430,172),
	(380,431,429),
	(381,431,275),
	(382,432,429),
	(383,433,429),
	(384,434,429),
	(385,429,324),
	(386,435,431),
	(387,435,434),
	(390,437,436),
	(389,436,435),
	(391,438,437),
	(392,439,435),
	(393,438,439),
	(394,441,120),
	(395,441,344),
	(396,442,280),
	(397,442,284),
	(398,442,441),
	(453,443,343),
	(400,443,284),
	(401,443,441),
	(402,443,120),
	(403,444,443),
	(452,444,343),
	(405,444,217),
	(406,445,441),
	(407,445,443),
	(408,445,444),
	(409,446,284),
	(410,446,280),
	(411,446,217),
	(412,447,284),
	(413,447,280),
	(414,448,447),
	(415,448,284),
	(416,448,280),
	(417,449,447),
	(418,449,284),
	(419,449,280),
	(420,450,447),
	(421,450,448),
	(422,450,449),
	(637,451,547),
	(424,451,441),
	(425,451,444),
	(426,442,110),
	(427,442,111),
	(428,449,110),
	(429,449,111),
	(430,452,451),
	(431,452,120),
	(432,453,280),
	(433,453,284),
	(434,453,452),
	(435,454,453),
	(436,454,444),
	(437,454,284),
	(665,565,551),
	(439,455,444),
	(440,455,452),
	(441,455,443),
	(442,456,455),
	(443,456,453),
	(444,456,448),
	(445,456,444),
	(446,456,443),
	(447,457,455),
	(448,457,443),
	(449,457,453),
	(450,457,448),
	(451,457,456),
	(459,257,213),
	(460,257,199),
	(461,257,119),
	(462,257,211),
	(463,257,200),
	(466,280,210),
	(467,280,256),
	(468,280,215),
	(470,256,260),
	(471,256,119),
	(472,460,459),
	(473,462,461),
	(474,463,462),
	(475,465,331),
	(476,466,464),
	(477,466,460),
	(478,467,464),
	(479,468,463),
	(480,468,467),
	(481,469,463),
	(482,469,462),
	(483,469,465),
	(484,470,469),
	(485,471,202),
	(486,472,202),
	(487,473,345),
	(488,474,202),
	(489,473,202),
	(519,464,119),
	(518,466,467),
	(516,475,289),
	(515,475,215),
	(494,476,475),
	(522,484,288),
	(521,483,482),
	(520,483,286),
	(514,477,310),
	(499,478,477),
	(500,469,284),
	(501,468,284),
	(502,459,461),
	(513,477,309),
	(506,480,215),
	(507,480,313),
	(508,481,313),
	(509,481,312),
	(564,502,501),
	(511,482,288),
	(512,482,286),
	(523,484,286),
	(524,485,325),
	(525,485,286),
	(526,485,288),
	(527,486,485),
	(528,486,484),
	(529,486,483),
	(530,486,482),
	(531,487,312),
	(617,535,534),
	(533,488,331),
	(627,543,542),
	(626,542,202),
	(625,541,179),
	(624,541,202),
	(623,541,540),
	(629,545,202),
	(632,547,202),
	(630,545,544),
	(542,491,331),
	(543,492,331),
	(544,493,331),
	(545,493,279),
	(546,494,331),
	(547,495,331),
	(612,487,313),
	(549,496,259),
	(550,496,257),
	(551,496,256),
	(552,496,279),
	(615,488,279),
	(590,525,514),
	(589,523,522),
	(588,520,519),
	(596,519,513),
	(586,517,515),
	(585,514,513),
	(622,540,539),
	(561,500,499),
	(562,500,490),
	(563,479,325),
	(565,503,502),
	(566,504,503),
	(567,503,505),
	(568,506,504),
	(569,506,503),
	(570,507,501),
	(571,508,501),
	(572,508,504),
	(573,509,503),
	(574,509,508),
	(575,510,502),
	(576,511,503),
	(577,511,509),
	(578,512,511),
	(620,539,298),
	(581,499,495),
	(618,537,298),
	(619,538,537),
	(584,499,496),
	(591,525,524),
	(592,521,257),
	(593,527,526),
	(594,527,525),
	(595,527,513),
	(597,522,513),
	(598,513,304),
	(599,526,257),
	(600,526,315),
	(601,528,202),
	(602,529,531),
	(603,529,532),
	(604,529,530),
	(640,528,547),
	(610,479,286),
	(628,544,543),
	(631,115,108),
	(633,547,108),
	(634,547,115),
	(635,548,105),
	(636,549,324),
	(641,454,547),
	(666,566,565),
	(667,569,537),
	(668,569,568),
	(669,568,567),
	(670,570,534),
	(671,570,214),
	(672,570,284),
	(673,571,570),
	(674,572,389),
	(675,572,189),
	(683,573,518),
	(677,572,390),
	(678,572,110),
	(679,572,518),
	(684,573,525),
	(681,572,524),
	(682,572,517),
	(685,575,574),
	(686,576,519),
	(687,576,517),
	(688,576,521),
	(689,573,515),
	(690,577,569),
	(691,577,571),
	(692,577,572),
	(693,577,575),
	(694,577,574),
	(695,577,576),
	(696,578,577),
	(697,578,576),
	(698,578,572),
	(699,578,574),
	(700,578,571),
	(701,578,573),
	(705,29,28),
	(704,36,194),
	(706,29,31),
	(707,25,26),
	(708,34,30),
	(709,34,31),
	(710,34,39),
	(711,40,30),
	(712,30,28),
	(713,39,28),
	(714,26,40),
	(715,26,28),
	(716,33,28),
	(717,33,31),
	(718,31,28),
	(719,35,28),
	(720,35,488),
	(721,37,28),
	(725,594,591),
	(723,579,359),
	(730,580,602),
	(731,580,601),
	(732,603,590),
	(733,603,591),
	(734,603,592),
	(735,603,593),
	(736,603,594),
	(737,603,595);

/*!40000 ALTER TABLE `dae_prereq_slo` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_settings
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_settings`;

CREATE TABLE `dae_settings` (
  `id` int(11) NOT NULL auto_increment,
  `setting` varchar(50) NOT NULL,
  `description` text,
  `type` varchar(7) default NULL,
  `value` varchar(150) NOT NULL,
  `default_value` varchar(150) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=95 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_settings` WRITE;
/*!40000 ALTER TABLE `dae_settings` DISABLE KEYS */;

INSERT INTO `dae_settings` (`id`, `setting`, `description`, `type`, `value`, `default_value`)
VALUES
	(82,'tag cloud max font size','Integer setting to increase the maximum font size for the tag cloud.','int','0','0'),
	(81,'course code length','Integer setting to determine the number of characters in a course code.','int','4','4'),
	(80,'program iteration','Integer setting to determine the amount of textfield rows to be created while submitting a new program.','int','40','40'),
	(79,'learning outcome rank iteration','Integer setting to determine the depth that the learning outcome rank may achieve.','int','10','10'),
	(78,'column iteration','Integer setting to determine how many columns will appear while browsing courses.','int','3','3'),
	(77,'graphviz iteration','Integer setting to append to the graphviz .svg file.','int','117','1'),
	(76,'autocomplete iteration','Integer setting to determine the amount of hidden autocomplete textfields to be created.','int','15','15'),
	(75,'daedalus homepage','The path to the daedalus homepage image.','image','sites/all/modules/custom/daedalus/img/daedalus-homepage.png','sites/all/modules/custom/daedalus/img/daedalus-homepage.png'),
	(74,'daedalus program image','The path to the daedalus program image.','image','sites/all/modules/custom/daedalus/img/daedalus-program.png','sites/all/modules/custom/daedalus/img/daedalus-program.png'),
	(73,'daedalus browse image','The path to the daedalus browse image.','image','sites/all/modules/custom/daedalus/img/daedalus-browse.png','sites/all/modules/custom/daedalus/img/daedalus-browse.png'),
	(72,'support marker','The path to the daedalus support image.','image','sites/all/modules/custom/daedalus/img/daedalus-support.png','sites/all/modules/custom/daedalus/img/daedalus-support.png'),
	(71,'adviser marker','The path to the daedalus adviser image.','image','sites/all/modules/custom/daedalus/img/daedalus-adviser.png','sites/all/modules/custom/daedalus/img/daedalus-adviser.png'),
	(70,'deleted button','The path to the daedalus deleted image.','image','sites/all/modules/custom/daedalus/img/daedalus-deleted.png','sites/all/modules/custom/daedalus/img/daedalus-deleted.png'),
	(69,'close button','The path to the daedalus close image.','image','sites/all/modules/custom/daedalus/img/daedalus-close.png','sites/all/modules/custom/daedalus/img/daedalus-close.png'),
	(68,'open button','The path to the daedalus open image.','image','sites/all/modules/custom/daedalus/img/daedalus-open.png','sites/all/modules/custom/daedalus/img/daedalus-open.png'),
	(67,'delete button','The path to the daedalus delete image.','image','sites/all/modules/custom/daedalus/img/daedalus-delete.png','sites/all/modules/custom/daedalus/img/daedalus-delete.png'),
	(66,'view button','The path to the daedalus view image.','image','sites/all/modules/custom/daedalus/img/daedalus-view.png','sites/all/modules/custom/daedalus/img/daedalus-view.png'),
	(65,'update button','The path to the daedalus update image.','image','sites/all/modules/custom/daedalus/img/daedalus-update.png','sites/all/modules/custom/daedalus/img/daedalus-update.png'),
	(64,'goal space','The path to the daedalus goal space image.','image','sites/all/modules/custom/daedalus/img/daedalus-goal-space.png','sites/all/modules/custom/daedalus/img/daedalus-goal-space.png'),
	(63,'goal legend','The path to the daedalus goal legend image.','image','sites/all/modules/custom/daedalus/img/daedalus-goal-legend.png','sites/all/modules/custom/daedalus/img/daedalus-goal-legend.png'),
	(62,'goal identification','The path to the daedalus goal image.','image','sites/all/modules/custom/daedalus/img/daedalus-goal.png','sites/all/modules/custom/daedalus/img/daedalus-goal.png'),
	(61,'unmapped identification','The path to the unmapped image.','image','sites/all/modules/custom/daedalus/img/daedalus-unmapped.png','sites/all/modules/custom/daedalus/img/daedalus-unmapped.png'),
	(60,'mapped identification','The path to the mapped image.','image','sites/all/modules/custom/daedalus/img/daedalus-mapped.png','sites/all/modules/custom/daedalus/img/daedalus-mapped.png'),
	(59,'computer science logo small','The path to the small computer science image.','image','sites/all/modules/custom/daedalus/img/daedalus-computer-science-small.png','sites/all/modules/custom/daedalus/img/daedalus-computer-science-small.png'),
	(58,'computer science logo','The path to the computer science image.','image','sites/all/modules/custom/daedalus/img/daedalus-computer-science.png','sites/all/modules/custom/daedalus/img/daedalus-computer-science.png'),
	(57,'question mark','The path to the hidden help question mark image.','image','sites/all/modules/custom/daedalus/img/daedalus-question-mark.png','sites/all/modules/custom/daedalus/img/daedalus-question-mark.png'),
	(56,'question mark2','The path to the term review question mark image.','image','sites/all/modules/custom/daedalus/img/daedalus-question-mark2.png','sites/all/modules/custom/daedalus/img/daedalus-question-mark2.png'),
	(55,'exclamation mark','The path to the term review exclamation mark image.','image','sites/all/modules/custom/daedalus/img/daedalus-exclamation-mark.png','sites/all/modules/custom/daedalus/img/daedalus-exclamation-mark.png'),
	(54,'checkmark','The path to the term review checkmark image.','image','sites/all/modules/custom/daedalus/img/daedalus-check-mark.png','sites/all/modules/custom/daedalus/img/daedalus-check-mark.png'),
	(53,'neato slo map setting','Boolean setting to switch between the \'neato\' and \'dot\' graph types for the learning outcome map graph.','bool','0','0'),
	(52,'neato course map setting','Boolean setting to switch between the \'neato\' and \'dot\' graph types for the course map graph.','bool','0','0'),
	(50,'show tag cloud settings','Boolean setting to show or hide the tag cloud font and text seperation settings.','bool','1','0'),
	(51,'show course codes under the root browse menu','Boolean setting to show or hide the course codes underneath the root daedalus browse menu.','bool','1','1'),
	(49,'show table settings in the browse courses page','Boolean setting to show or hide the browse > courses table settings.','bool','0','0'),
	(48,'show courses in the browse courses page','Boolean setting to show or hide linkable courses in the browse daedalus page.','bool','1','1'),
	(47,'collapse department page on page load','Boolean setting used to collapse all the course codes in the manage > course codes page.','bool','1','1'),
	(46,'show uncovered learning outcome warning','Boolean setting to show or hide a warning to inform if a course has prerequisite learning outcomes which are not covered in any prerequisite course.','bool','1','1'),
	(45,'title each autocomplete textfield','Boolean setting to show or hide the title to each hidden autocomplete textfield when they appear.','bool','1','1'),
	(44,'manage settings','A child url to manage daedalus setting content.','url','daedalus/manage/settings','daedalus/manage/settings'),
	(43,'manage imports/exports','A child url to manage uploading and downloading of daedalus content.','url','daedalus/manage/information','daedalus/manage/information'),
	(38,'manage term reviews','A child url to manage daedalus term review content.','url','daedalus/manage/term-review','daedalus/manage/term-review'),
	(37,'manage tags','A child url to manage daedalus tag content.','url','daedalus/manage/tags','daedalus/manage/tags'),
	(35,'manage course codes','A child url to manage daedalus course code content.','url','daedalus/manage/course-code','daedalus/manage/course-code'),
	(36,'manage learning outcomes','A child url to manage daedalus student learning outcome content.','url','daedalus/manage/slo','daedalus/manage/slo'),
	(34,'manage courses','A child url to manage daedalus course content.','url','daedalus/manage/course','daedalus/manage/course'),
	(33,'manage','The root url to manage daedalus content.','url','daedalus/manage','daedalus/manage'),
	(30,'build term reviews','A child url to build daedalus term review content.','url','daedalus/build/term-review','daedalus/build/term-review'),
	(29,'build learning outcomes','A child url to build daedalus student learning outcome content.','url','daedalus/build/slo','daedalus/build/slo'),
	(28,'build course codes','A child url to build daedalus course code content.','url','daedalus/build/course-code','daedalus/build/course-code'),
	(27,'build courses','A child url to build daedalus course content.','url','daedalus/build/course','daedalus/build/course'),
	(26,'build','The root url to analyse daedalus content.','url','daedalus/build','daedalus/build'),
	(25,'analyse student files','A child url to analyse magellan student file content.','url','daedalus/analyse/student-files','daedalus/analyse/student-files'),
	(24,'analyse term reviews','A child url to analyse daedalus term review content.','url','daedalus/analyse/term-review','daedalus/analyse/term-review'),
	(23,'analyse learning outcomes','A child url to analyse daedalus student learning outcome content.','url','daedalus/analyse/slo','daedalus/analyse/slo'),
	(22,'analyse course','The root url to analyse daedalus content.','url','daedalus/analyse/course','daedalus/analyse/course'),
	(21,'analyse','The root url to analyse daedalus content.','url','daedalus/analyse','daedalus/analyse'),
	(20,'browse visual maps','A child url to browse daedalus visual map content.','url','daedalus/browse/graphviz','daedalus/browse/graphviz'),
	(19,'browse term reviews','A child url to browse daedaus term review content.','url','daedalus/browse/term-review','daedalus/browse/term-review'),
	(18,'browse learning outcomes','A child url to browse daedalus student learning outcome content.','url','daedalus/browse/slo','daedalus/browse/slo'),
	(16,'browse','The root url to browse daedalus content.','url','daedalus/browse','daedalus/browse'),
	(17,'browse courses','A child url to browse daedalus course content.','url','daedalus/browse/course','daedalus/browse/course'),
	(83,'tag cloud height percent','Integer setting to set the line spacing percentage for the tag cloud.','int','160','200'),
	(84,'course name preview length','Integer setting to determine the amount of characters a course may contain before being cut off.','int','50','50'),
	(85,'list size before collapsing','Integer setting to determine how many items must appear in the analyse page lists before they are collapsed.','int','10','10'),
	(86,'student program total','Integer setting to determine the maximum amount of program forms a student may create.','int','3','3'),
	(87,'advising timeout','Integer setting to determine the maximum amount of time for an advising session.','int','120','120'),
	(88,'file duration','Integer setting to determine the maximum amount of years before a student file becomes deletable.','int','5','5'),
	(89,'tag seperate character','The string which seperates tags to allow for multiple tag entry.','str',',',','),
	(90,'tag identify symbol','The string used to identify a tag in the autocomplete functions.','str','#','#'),
	(91,'graphviz path','The file locations for the dot and neato programs. Example /usr/bin/ or /local/bin/','str','/local/bin/',''),
	(92,'file permissions','The allowed upload file types for advising. Enter a comma separated string.','str','doc, docx, pdf, PDF, txt','doc, docx, pdf, PDF, txt'),
	(93,'course map size','The comma separated width and height setting to display for a course map. Example 8.5,12','str','8.5,12','8.5,12'),
	(94,'program map size','The comma separated width and height setting to display for the student program map. Example 9,13','str','9,13','9,13'),
	(1,'my program','The root url to view magellan program content.','url','daedalus/program','daedalus/program'),
	(2,'program form','A child url to view magellan program content.','url','daedalus/program/form','daedalus/program/form'),
	(3,'program map','A child url to view magellan program map content.','url','daedalus/program/map','daedalus/program/map'),
	(4,'program my strengths','A child url to view magellan student learning outcome strenghts content.','url','daedalus/program/strengths','daedalus/program/strengths'),
	(5,'program nextstep','A child url to view magellan nextstep content.','url','daedalus/program/nextstep','daedalus/program/nextstep'),
	(6,'program goal','A child url to view magellan goal content.','url','daedalus/program/goal','daedalus/program/goal'),
	(7,'advise','A child url to view magellan advising content.','url','daedalus/advise','daedalus/advise'),
	(8,'advise student','A child url to view magellan advising student content.','url','daedalus/advise/student','daedalus/advise/student'),
	(9,'session log','A child url to view magellan advising session log content.','url','daedalus/advise/session_log','daedalus/advise/session_log'),
	(10,'session history','A child url to view magellan advising session history content.','url','daedalus/advise/session_history','daedalus/advise/session_history'),
	(11,'support','The root url to view magellan support content.','url','daedalus/support','daedalus/support'),
	(12,'support student','A child url to view magellan student support content.','url','daedalus/support/student','daedalus/support/student'),
	(13,'support student program form','A child url to view magellan support student program form content.','url','daedalus/support/form','daedalus/support/form'),
	(14,'support session log','A child url to view magellan session log support content.','url','daedalus/support/session_log','daedalus/support/session_log'),
	(15,'support session history','A child url to view magellan session history support content.','url','daedalus/support/session_history','daedalus/support/session_history'),
	(31,'build programs','A child url to build magellan program content.','url','daedalus/build/program','daedalus/build/program'),
	(32,'build goals','A child url to build magellan goal label content.','url','daedalus/build/goal','daedalus/build/goal'),
	(39,'manage programs','A child url to manage magellan program content.','url','daedalus/manage/program','daedalus/manage/program'),
	(40,'manage student','A child url to manage magellan student information.','url','daedalus/manage/student','daedalus/manage/student'),
	(41,'manage session history','A child url to manage magellan session information.','url','daedalus/manage/session_history','daedalus/manage/session_history'),
	(42,'manage goals','A child url to manage magellan goal content.','url','daedalus/manage/goal','daedalus/manage/goal');

/*!40000 ALTER TABLE `dae_settings` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_slo
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_slo`;

CREATE TABLE `dae_slo` (
  `id` int(11) NOT NULL auto_increment,
  `slo_rank` tinyint(4) default '-1',
  `slo_text` text NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=604 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_slo` WRITE;
/*!40000 ALTER TABLE `dae_slo` DISABLE KEYS */;

INSERT INTO `dae_slo` (`id`, `slo_rank`, `slo_text`)
VALUES
	(22,0,'Edit a technical text of at least 1000 words.'),
	(23,0,'Appraise critically research papers from the current literature.'),
	(24,0,'Clarify unfamiliar concepts found in the multidisciplinary literature.'),
	(25,4,'Present the results of a simple experiment in the poster format.'),
	(26,3,'Design experiments using existing bioinformatics tools.'),
	(147,9,'Explain what happens in the course of an interrupt or a system call.'),
	(28,0,'Explain the components of mechanism of the Central Dogma in molecular biology.'),
	(29,2,'Select the most appropriate substitution matrix for a given experiment.'),
	(30,1,'Describe the main concepts of molecular evolution.'),
	(31,1,'Describe the process of multiple sequence alignment and identify the theoretical limitations of this problem.'),
	(32,2,'Describe how heuristic similarity searches in biological sequences are performed and scored.'),
	(33,2,'Describe the properties of a few key pattern detection methods in biological sequences.'),
	(34,2,'Interpret phylogenies with respect to the properties a few key inferrence methods.'),
	(35,5,'Describe the components of genomes, their sequencing and automated annotation.'),
	(36,4,'Develop scripts in PERL or Python to implement data processing pipelines.'),
	(37,1,'Contrast biologically-inspired computational techniques from actual biological processes.'),
	(38,2,'Apply concepts of information theory to bioinformatics.'),
	(39,1,'Discuss the optimization challenges and limitation to the protein folding problem.'),
	(40,2,'Interact manually and programatically with common sources of data in bioinformatics.'),
	(42,0,'Describe basic concepts in Graph Theory.'),
	(386,4,'Design a simple ALU from basic combinatorial circuit components.'),
	(384,2,'Represent and simplify Boolean functions using truth tables, sum of min-terms, and products of max-terms.'),
	(102,1,'Compare and contrast a shell, a process, and an operating system.'),
	(103,1,'Explain the relationship between shell, processes, and operating systems.'),
	(104,2,'Explain what pipes and files are and how they are used.'),
	(105,2,'Use the UNIX command-line environment to perform all parts of the software development cycle.'),
	(106,1,'Design regular expressions to perform text searches.'),
	(107,2,'Write short (50 line) shell scripts to solve a simple problem such as running regression tests.'),
	(108,2,'Explain the C build cycle (preprocess, compile, assemble, link).'),
	(110,1,'Use pointers in C and manage memory.'),
	(111,3,'Implement simple data structures (linked lists, queues, stacks) in C.'),
	(112,5,'Explain the role of software testing and testing methods.'),
	(557,0,'Describe the fundamental concepts in TCP/IP networks, including: the IP address scheme, subnets and net masks, routing, and ports.'),
	(115,3,'Use a standard build tool, such as `make\', by creating makefiles, given the source dependencies of a software project.'),
	(116,5,'Explain the purpose of a revision control system.'),
	(325,2,'Determine the number of primitive operations of an algorithm in terms of instance size.'),
	(118,6,'Use a revision control system to manage a medium size software project. (10s of files, 1000s lines of code)'),
	(119,0,'Use basic data structures (linked lists, queues, stacks, trees).'),
	(120,0,'Describe the fundamental components of an object-oriented program such as variables, control structures, functions (methods), compound types (classes), instances (objects) &amp; references.'),
	(146,10,'Describe what resource an operating system must manage and protect.'),
	(144,2,'Identify the roles and components of an operating system.'),
	(145,8,'Explain what interrupts are and how they are used by an operating system.'),
	(148,9,'Explain what a process is and how processes are created.'),
	(149,10,'Compare and contrast various process scheduling algorithms.'),
	(150,10,'Write multithreaded programs.'),
	(151,7,'Describe the mutual exclusion problem and various mechanisms for solving it.'),
	(152,11,'Explain what deadlocks are and suggest ways of dealing with them.'),
	(153,10,'Compare and contrast various inter-process communication paradigms.'),
	(154,6,'Explain what is the purpose of memory management.'),
	(155,5,'Describe some of the problems that memory management must solve.'),
	(156,9,'Explain what virtual memory is, why it is useful, and how it can be implemented.'),
	(157,8,'Explain how demand paging is implemented.'),
	(158,9,'Compare and contrast various page replacement algorithms.'),
	(159,4,'Explain what the \"file\" abstraction is.'),
	(160,5,'Describe how files are organized and managed in modern operating systems.'),
	(161,6,'Describe the structure and operation of the Unix File System.'),
	(184,0,'Know how to use computers (basic skills).'),
	(164,0,'SELECT the most appropriate data type to store a piece of information from a problem statement.'),
	(165,2,'Design strategies to extract specific information from a text document.'),
	(166,2,'Select the most appropriate type of loop to accomplish a simple programming task.'),
	(167,2,'Design conditional statements to handle specific sets of conditions in an algorithm.'),
	(382,0,'Describe how values are stored and represented within a computer.'),
	(170,0,'Manipulate strings and arrays using indexing.'),
	(387,4,'Implement and characterize various latches and flip-flops.'),
	(172,5,'Design objects with attributes and methods from a problem statement.'),
	(173,3,'Implement a solution based on nested loops to solve a problem.'),
	(174,1,'Apply a map abstract data type (ADT) to solve an appropriate problem.'),
	(264,0,'Describe the basic Architecture of the CPU.'),
	(176,0,'Design (reusable) functions to divide the solution of a problem into simpler steps.'),
	(177,2,'Implement a script that parse for specific information from a text file.'),
	(178,4,'Implement a solution to a problem using the most appropriate combination of data structure, functions and objects.'),
	(179,0,'Use API documentation to instantiate objects or call functions from external libraries.'),
	(601,1,'SLO12'),
	(595,0,'SLO6'),
	(181,3,'Formulate a set of constraints on a few variables using boolean logic.'),
	(182,5,'Identify the origin of logical bugs in small code sample (30 lines).'),
	(183,0,'Identify the variables and relevant information from a problem statement.'),
	(186,0,'Define a computer system.'),
	(188,1,'Describe the structure and operation of computer systems.'),
	(189,0,'Explain memory, binary numbers, and memory addresses.'),
	(191,1,'Design Java programs on an integrated development environment such as JCreator.'),
	(192,2,'Develop and use arithmetic expressions comprising arithmetic operators, constants, and variables.'),
	(194,3,'Develop a program to solve simple problems by decomposing the problem into simple tasks, implementing procedures to solve the tasks, and composing the procedures to solve the original problem.'),
	(195,2,'Develop and use boolean expressions comprising relational and logical operators.'),
	(196,2,'Explain and use the concept of loops to perform repetitive tasks.'),
	(197,0,'Implement a program with a graphical user interface that prints text and displays pictures.'),
	(198,2,'Explain and use the concept of procedures to develop modularized code.'),
	(199,0,'Explain and use the concept of arrays to store aggregate data.'),
	(200,2,'Implement simple algorithms to search and sort arrays.'),
	(385,3,'Implement Boolean functions using basic combinatorial circuit components such as multiplexers, demultiplexers, decoders, adders, universal gates, and other gates.'),
	(202,3,'Write a reasonably-complex (200-250 line) modular procedural program.'),
	(388,5,'Implement and describe the operation of registers and counters.'),
	(389,4,'Describe the structure and types of memory inside a computer.'),
	(205,5,'Explain and use the concept of method overloading'),
	(391,6,'Implement a simple CPU using a hardware description language (HDL).'),
	(390,0,'Identify and describe the purpose of the components of a computer, e.g., Bus, Memory, CPU, etc.'),
	(208,4,'Explain and use the concept of inheritance.'),
	(341,1,'Explain the difference between (and use of) class and instance fields.'),
	(209,1,'Differentiate between arrays, linked-lists, and other aggregate data structures.'),
	(210,1,'Implement a linked list data structure.'),
	(211,2,'Implement searching, sorting, and other operations on a linked list.'),
	(212,2,'Implement the stack, queue, dequeue, and list abstract data types (ADT) using arrays and linked-lists.'),
	(213,3,'Implement stacks and queues as arrays, arraylists and linked lists.'),
	(214,3,'Identify applications of the stack, queue, and list abstract data types (ADTs).'),
	(215,1,'Explain and use the concept of recursion.'),
	(216,2,'Describe the binary tree data structure and binary tree traversals.'),
	(217,4,'Develop complete applications comprising multiple classes that integrate various object-oriented programming concepts.'),
	(218,0,'Implement interactive program using the console as user interface.'),
	(219,1,'Use web authoring software to implement a basic multipage website.'),
	(220,0,'Explain the purpose and structure of the Hypertext Mark Language (HTML).'),
	(221,0,'Design a basic multipage website.'),
	(222,0,'Describe issues that should be considered when designing a website.'),
	(223,0,'Describe techniques for determining the usability of a website.'),
	(224,0,'Identify some of the challenges in robotics and mechanisms for overcoming these challenges.'),
	(225,0,'Use sensors and actuators in a robotics applications.'),
	(226,0,'Use states and transitions to model the behaviour of a system.'),
	(227,0,'Apply various techniques to identify and recover from faults.'),
	(228,0,'Program a robot to accomplish tasks of moderate complexity.'),
	(229,0,'Identify the challenges in designing and implementing games.'),
	(230,0,'Design a simple animated game.'),
	(231,0,'Implement a game using integrated media presentation authoring software.'),
	(232,0,'Describe how an event driven system works.'),
	(233,0,'Describe and justify what constitutes a good game.'),
	(234,0,'Work with peers on a shared project.'),
	(235,2,'Write a technical report describing and justifying the design and implementation of a project.'),
	(236,0,'Identify future directions in various technologies and computer science fields.'),
	(238,0,'Classify various social computing applications based on type, audience, and purpose.'),
	(239,0,'Describe the technologies used by most social computing applications.'),
	(240,0,'Describe current trends and issues in social computing.'),
	(241,0,'Identify the social impacts of social computing.'),
	(242,0,'Explain the need for user studies.'),
	(243,0,'Compare various user study approaches such as surveys, interviews, and focus groups.'),
	(244,0,'Design a small lab study.'),
	(245,1,'Prepare a literature survey for a small user study.'),
	(246,0,'Describe various prototyping methods and their purpose.'),
	(247,0,'Create a prototype of a simple social computing application.'),
	(248,0,'Explain why obtaining ethics approval is important when conducting user studies.'),
	(249,2,'Write a simple ethics approval application to conduct a small user study.'),
	(593,0,'SLO4'),
	(252,1,'Write a technical report presenting the user study, its results, and analysis.'),
	(253,0,'Write a paragraph-length text on a technical topic using precise terms.'),
	(254,1,'Write texts on a technical topic in a language appropriate for a given audience.'),
	(255,0,'Source relevant information within the guidelines of a given citation style.'),
	(256,5,'Implement the priority-queue ADT using lists and heaps.'),
	(257,5,'Implement the map, dictionary, and set ADTs using lists, binary search trees, and hash tables.'),
	(258,6,'Implement mechanisms to deal with collisions in a hash-table.'),
	(259,3,'Implement a tree data structure and implement depth-first and breadth-first traversals.'),
	(260,4,'Implement a binary tree data structure and implement pre-order, in-order, and post-order traversals.'),
	(261,0,'Describe how numerical types, text and images are encoded using bit patterns.'),
	(262,0,'Describe how memory is organized and stored on common physical devices.'),
	(263,1,'Describe one or more technique to compress data.'),
	(265,1,'Describe machine language, instruction sets and how arithmetic and logic operations are performed by the CPU.'),
	(266,0,'Describe how the CPU communicate with peripherals.'),
	(267,0,'Describe the architecture of an operating system.'),
	(268,0,'Recall key advances in computing and operating systems.'),
	(269,0,'Decompose a word problem into a series of sub-problems.'),
	(270,0,'Describe network classes, protocols and common hardware system that are used to combine networks.'),
	(271,1,'Describe the architecture of the Internet and how addressing works.'),
	(272,2,'Describe how the HTTP protocol is used to serve files across the WWW.'),
	(273,2,'Recall common types of attacks and their corresponding strategies to counter them.'),
	(274,0,'Formulate the solution to word problem as an algorithm.'),
	(275,0,'Describe the structure of a relational database.'),
	(276,1,'Propose a relational database design to model the data in a word problem.'),
	(277,0,'Describe various techniques used in Computer Graphic (CG) to create models.'),
	(278,1,'Describe the different aspects of rendering in computer graphics.'),
	(279,3,'Describe the graph ADT, as well as depth-first and breadth first traversals.'),
	(483,6,'Explain the relationship between theoretical analysis and the practical performance of an algorithm.'),
	(280,6,'Select the appropriate data structure to implement a given ADT under a given set of constraints.'),
	(281,3,'Understand, compare, and implement various sorting algorithms, including: selection sort, insertion sort, quicksort, merge sort, heap sort, and radix sort.'),
	(282,4,'Compare and implement various shortest path algorithms, including: Dijkstra\'s and Floyd-Warshal algorithms.'),
	(283,4,'Compare and implement various minimum spanning tree algoritms, including: Prim\'s and Kruskal\'s algorithms.'),
	(284,7,'Select and use appropriate abstract data types, data structures, and algorithms to solve moderately complex problems.'),
	(286,3,'Determine the asymptotic complexity (Big-O) of simple functions such as polynomial, polylogarithmic, and exponential functions.'),
	(287,3,'Identify differences among best, average, and worst case behaviours of a given algorithm.'),
	(288,4,'Determine the asymptotic complexity of some simple iterative and recursive algorithms.'),
	(289,3,'Implement simple iterative and recursive algorithms to solve moderately simple tasks.'),
	(290,2,'Implement recursive search and state-space exploration algorithms.'),
	(291,1,'Describe the rights and limitations associated with a number of common software licenses.'),
	(292,0,'Describe the concept of Intellectual Property and identify IP issues in current events.'),
	(293,0,'Enumerate the major phases in project management.'),
	(294,1,'Prepare a project proposal from the information provided in a Request for proposal document.'),
	(295,2,'Select the most appropriate software platform or programming language from a project proposal.'),
	(296,1,'Describe the functions of a number of project management tools such as planning tools and document sharing platforms.'),
	(297,3,'Apply principles of project management to case-based scenarios.'),
	(298,0,'Describe the life cycle of a software project.'),
	(299,1,'Describe the most common software engineering methodologies.'),
	(300,2,'Describe how modularity is used to manage complex software projects.'),
	(301,3,'Draw a dataflow diagram representing the flow of data that occurs in a simple situation.'),
	(302,1,'Describe the role of software testing and documentation as part of the life cycle of software.'),
	(303,0,'Identify key developments in programming languages and paradigms.'),
	(304,0,'Describe basic programming concepts, object orientation and procedural units.'),
	(305,0,'Identify trends in the IT industry and relate them to potential careers in computing.'),
	(306,1,'Translate a problem statement for a non-technical audience into a technical document (and vice-versa).'),
	(307,2,'Summarize a piece of text in a style appropriate for a given audience.'),
	(308,2,'Proofread a text to improve readability for a given audience.'),
	(309,0,'Translate predicates into English statements and vice-versa.'),
	(310,1,'Identify equivalent predicates expressed in formal logic notation.'),
	(311,1,'Express the negation, the converse, the inverse and contrapositive of logical statements.'),
	(312,0,'Prove logical statements using common proof strategies.'),
	(313,1,'Use induction to prove the equivalence between two expressions.'),
	(314,2,'Propose and prove an explicit formula for a given sequence.'),
	(315,0,'Evaluate expressions of Modular arithmetics.'),
	(316,0,'Manipulate set theoretic functions.'),
	(317,0,'Prove expressions using boolean laws.'),
	(318,1,'Identify equivalence relations and determine well definedness of operation on equivalence classes.'),
	(319,1,'Apply truth tables to evaluate a logical formula.'),
	(358,8,'Perform a denormalization of a database.'),
	(353,5,'Identify the keys of a relation, and prime and nonprime attributes using formal database design theory.'),
	(354,0,'Determine F-closure of functional dependency sets using Armstrong\'s axioms and determine the X-closure of attribute sets.'),
	(355,6,'Convert a relation to first, second, third, or Boyce-Codd normal form.'),
	(356,7,'Prove that a relation is in second, third, or Boyce-Codd normal form.'),
	(357,7,'Describe what normalization is and its role in database design.'),
	(324,1,'Use the command line of the UNIX environment.'),
	(501,0,'Describe the importance of user interface design and usability in the application development process.'),
	(327,1,'Lead a team of 4 to 8 peers on an IT project.'),
	(328,2,'Translate a client\'s needs into specifications for an IT project.'),
	(329,4,'Apply principles of project management by executing the 5 steps of a project\'s life cycle.'),
	(330,3,'Discuss on technical topics with \"non-technical\" client.'),
	(331,1,'Use pseudo-code to specify an algorithm'),
	(332,0,'Explain what is an algorithm.'),
	(333,1,'Explain the purpose and function of an integrated development environment (IDE).'),
	(334,0,'Explain and use the concepts of primitive types, variables, and variable assignment.'),
	(335,0,'Explain and use the concept of conditional structures to perform decision-making.'),
	(383,1,'Convert values between different number representations, such as hexadecimal, binary, two’s complement, and IEEE-754 floating point.'),
	(337,1,'Identify and repair simple bugs in small code samples (30 lines).'),
	(338,3,'Describe the procedural programming paradigm and describe commonalities among a variety of commonly used procedural languages.'),
	(339,0,'Describe what the disciplines of informatics and computer science entail.'),
	(340,1,'Compare and contrast problems, challenges, issues, and foci of computer science and informatics.'),
	(342,2,'Implement a program using both class and instance fields.'),
	(343,3,'Define classes that use accessors (getters) and mutators (setters), and that overload standard methods.'),
	(344,4,'Describe the object-oriented programming paradigm and describe commonalities among a variety of commonly used object-oriented languages.'),
	(345,0,'Define what is an abstract data type (ADT).'),
	(346,1,'Describe the difference between data, information, and knowledge.'),
	(347,2,'Describe the purpose, function, evolution, variants, and the components of database and database management systems.'),
	(348,3,'Describe the purpose, function, evolution, classification, and building blocks of data models and data modeling.'),
	(349,0,'Describe what business rules are and how they influence database design.'),
	(350,4,'Describe the basic components of a relational model and how relations are implemented.'),
	(351,4,'Describe the purpose, function, and importance of a data dictionary, system catalog, and indexing.'),
	(352,1,'Derive business rules from specifications.'),
	(359,3,'Perform standard relational algebra and calculus operations.'),
	(360,5,'Describe the main characteristics of entity relationship components and how relationships between entities are defined.'),
	(361,2,'Translate business rules into database table and relationship designs.'),
	(362,5,'Construct an entity relationship diagram (ERD).'),
	(363,4,'Use the basic SQL data definition and manipulation operations.'),
	(364,3,'Describe the properties of multiuser database transactions (ACID+S).'),
	(365,4,'Describe the mechanisms and role of concurrency control in database integrity.'),
	(366,5,'Explain what database recovery management is and its role in database integrity.'),
	(367,4,'Differentiate between on-line transactional process (OLTP), on-line analytical process (OLAP), and knowledge discovery from data.'),
	(368,2,'Select the most appropriate software development methodology for a mid-sized development team.'),
	(369,0,'Prepare a Project charter for a realistic development project.'),
	(370,1,'Prepare a formal Software Requirement Specification (SRS) and Project plans.'),
	(371,4,'Design a software system and prepare detailed design documentation.'),
	(372,5,'Evaluate a system design and its detailed design documentation.'),
	(373,6,'Create a Test Plan for a software development project.'),
	(374,1,'Execute a QA cycle.'),
	(375,0,'Explain the concept of software architecture.'),
	(376,1,'Make basic architectural decision for a software system.'),
	(377,0,'Apply standard software processes for version control.'),
	(378,0,'Apply standard software processes change request management.'),
	(379,1,'Apply standard software processes for risk management.'),
	(380,1,'Apply standard software processes for build and deployment management.'),
	(381,7,'Apply concepts of software engineering to plan, execute and manage a small software project.'),
	(392,6,'Describe the structure, components, and operation of a general register machine.'),
	(393,7,'Write simple routines in assembly and explain how they work.'),
	(394,7,'Describe the purpose, function and implementation of interrupts in a computer system.'),
	(395,8,'Compare and contrast the various input/output mechanisms in a computer such as programmed, interrupt driven, DMA, and polling.'),
	(396,8,'Implement subroutines and nested subroutine calls in assembly and describe the purpose and function of a process (program) stack.'),
	(397,9,'Use a symbolic debugger, such as GDB, to determine where in the program the process is presently executing, and what values are stored in the local variables.'),
	(398,10,'Implement a small project in assembly using a real-world instruction set.'),
	(399,2,'Deliver a 5-minute presentation on a given topic.'),
	(400,1,'Prepare a formal letter to achieve a number of distinct goals: request, complaint, answer to complaint, confirmation and cover letters.'),
	(401,0,'Critique a document in the letter or formal report format for appropriate language, structure and style.'),
	(402,0,'Identify and eliminate sources of noise in all forms of communication.'),
	(403,1,'Prepare an oral presentation with a proper balance of visuals, message and delivery.'),
	(405,0,'Identify the various components and factors in communication theory.'),
	(406,1,'Prepare a cohesive report and presentation collaboratively with peers.'),
	(407,1,'Prepare a formal analytical report on a given topic.'),
	(408,1,'Prepare an executive summary for a formal report.'),
	(409,0,'Explain the differences between conclusions and recommendations.'),
	(410,0,'Compare and contrast a variety of ethical theories and their applications to computing technology.'),
	(411,0,'Build a store of knowledge of issues, and perspectives on them, in computer ethics.'),
	(412,1,'Read and critique positions on issues in computer ethics.'),
	(413,2,'Formulate concrete theses concerning issues in computer ethics.'),
	(414,3,'Defend a thesis on an issue of computer ethics with arguments both textually and verbally.'),
	(415,8,'Formulate solutions to various synchronization problems.'),
	(416,9,'Design software components that are safe to use in a multithreaded environment.'),
	(417,9,'Compare and contrast various approaches to dealing with deadlock.'),
	(418,0,'Describe fundamental concepts of the web including hosting and hyperlinking, and how they affect website creation.'),
	(423,3,'Use Javascript to manipulate the structure of XHTML documents.'),
	(425,3,'Apply a set of options for including multimedia content in a website.'),
	(420,2,'Organize files into a folder structure that is appropriate for a small website project.'),
	(437,8,'Describe the structure of a Content Management System (CMS).'),
	(419,1,'Produce code with a simple text editor and use the appropriate software to transfer between hosts.'),
	(440,0,'Describe motivation, history, and paradigm of object oriented programming.'),
	(421,2,'Implement web page structures using semantically correct XHTML code.'),
	(422,3,'Use Cascading Style Sheets (CSS) to override how web browsers display XHTML documents.'),
	(496,6,'Use standard data structures to efficiently implement graph algorithms.'),
	(424,3,'Distinguish between coding standards and conventions commonly observed on the web.'),
	(432,5,'Identify a number of website attack vectors and how these can be exploited in server-side processing.'),
	(426,0,'Assess the accessibility of a website from a set of general principles.'),
	(428,1,'Design a website using a combination of client-side technologies: XHTML, CSS, and Javascript.'),
	(429,4,'Use PHP to implement server-side processing of web requests.'),
	(427,3,'Optimize a website to improve its visibility to search engines.'),
	(430,6,'Use Object-Orientation to design simple PHP scripts.'),
	(435,6,'Implement a game or similar application using PHP scripting, sessions and communication to a database back-end.'),
	(431,5,'Communicate with PHP to a database back-end to perform simple tasks such as queries, insertions/deletions and join operations.'),
	(433,5,'Implement cookies and cookie tracking within a website project.'),
	(439,7,'Use an API to implement a web application within a Content Management System (CMS).'),
	(434,5,'Implement a website using PHP sessions.'),
	(514,2,'Identify the structure in the address organization at each layer of the TCP/IP stack.'),
	(436,7,'Evaluate and select a content management system for a specific project.'),
	(478,3,'Use a logic programming language to write simple programs.'),
	(438,9,'Implement an extension to a CMS using the API provided by a third party.'),
	(442,8,'Identify and describe issues in implementation of object oriented languages.'),
	(441,5,'Identify key concepts of object oriented programming: polymorphism, encapsulation, abstraction, inheritance, dynamic dispatch, reflection.'),
	(443,8,'Analyze a set of requirements to identify objects in the problem domain.'),
	(445,10,'Compare and contrast the strengths, weaknesses, and features of various object oriented languages.'),
	(444,9,'Define software objects and their collaboration to fulfill requirements.'),
	(446,8,'Describe the motivation and paradigms of generic programming.'),
	(447,8,'Design and implement generic types, such as templates, and generics.'),
	(448,9,'Select appropriate generic types in the design of object oriented programs.'),
	(504,3,'Design a user interface in agreement with the standard user interface guidelines and best practices.'),
	(450,10,'Compare and contrast the generic programming mechanisms in various languages.'),
	(449,9,'Identify and describe issues in implementation of generic programming mechanisms.'),
	(452,11,'Describe commonly used design patterns.'),
	(468,8,'Implement a scanner for a simple language.'),
	(467,2,'Design a simple language with context free grammar.'),
	(596,0,'SLO7'),
	(451,10,'Describe what are design patterns and what is their purpose.'),
	(454,11,'Implement commonly used design patterns.'),
	(453,10,'Select appropriate design patterns in the design object oriented programs.'),
	(457,11,'Analyze an object oriented design to determine whether it satisfies a given set of requirements.'),
	(456,11,'Develop an object oriented design for a program that satisfies a given set of requirements.'),
	(455,10,'Use UML to specify program architecture and design patterns.'),
	(458,0,'Recall the history and major paradigms of programming languages.'),
	(461,0,'Describe deterministic and non-deterministic finite automata.'),
	(459,1,'Describe the functions and the main structure of compilers.'),
	(460,2,'Describe lexical analysis, syntactic analysis and semantic analysis in compiler construction.'),
	(462,1,'Describe regular expression and its usage in token generation.'),
	(463,2,'Describe how automated scanner generators construct a finite automation from regular expression.'),
	(464,1,'Understand language specification and syntactic analysis by context free grammars.'),
	(465,3,'Describe various parsing algorithms: bottom up and top down parsing.'),
	(472,4,'Identify core issues in programming language design (2): control flow construct and exception handling.'),
	(471,4,'Identify core issues in programming language design: names, scopes (static and dynamic) and bindings (early and late).'),
	(466,3,'Describe semantic analysis and the use of attribute grammars to enforce semantic rules.'),
	(479,4,'Recognize that some problems are unlikely to be efficiently solvable (NP-Hardness).'),
	(470,9,'Implement an interpreter for a simple language.'),
	(469,8,'Implement a recursive descent parser for a simple language.'),
	(473,4,'Identify core issues in programming language design (3): data and types.'),
	(474,4,'Identify core issues in programming language design (4): subroutines and  parameter passing methods.'),
	(475,4,'Describe basic concepts, computational model and language constructs of functional programming.'),
	(477,2,'Describe basic concepts and language constructs of logic programming.'),
	(476,5,'Use a functional programming language to write simple programs.'),
	(481,2,'Apply inductive proofs and proofs by contradiction to algorithms.'),
	(486,7,'Perform an asymptotic analysis of an algorithm\'s running time.'),
	(485,5,'Determine the complexity of an algorithm.'),
	(491,2,'Recognize problem statements where a solution based on a greedy approach is appropriate.'),
	(480,2,'Express an algorithm\'s running time as a recurrence relation and derive a closed form.'),
	(482,5,'Understand the relevance of different theoretical performance measures: worst-case vs. ave case running time.'),
	(567,0,'Define what is mobile computing.'),
	(568,1,'Classify and discuss various applications in mobile computing.'),
	(484,5,'Estimate the size of an input that an algorithm can process relatively quickly.'),
	(490,0,'Extend known alorithms and data structures to solve a closely related problem.'),
	(487,2,'Select the most appropriate proof technique to prove the correctness of a given algorithm.'),
	(488,4,'Apply graph exploration approaches as tool to solve a wide range of problems.'),
	(493,4,'Recognize problem statements where a solution based on a Dynamic Programming approach is appropriate.'),
	(553,0,'Explain what access control entails and its purpose.'),
	(492,2,'Recognize problem statements where a solution based on a Divide and Conquer approach is appropriate.'),
	(494,2,'Recognize problem statements where a solution based on a randomized approach is appropriate.'),
	(552,1,'Explain the operation and differences of public key encryption and symmetric key encryption.'),
	(495,2,'Recognize problem statements where a solution based on divide and conquer, dynamic programming or greedy approach is appropriate.'),
	(513,1,'Explain the responsibilities of the layers in the OSI and TCP/IP stacks.'),
	(499,7,'Abstract real-world problems into fundamental algorithm, data structure, and graph problems.'),
	(500,8,'Solve simple algorithm design problems.'),
	(512,7,'Construct low and high fidelity prototypes.'),
	(502,1,'Identify the basic properties of users and devices that must be considered when designing and implementing interactive applications.'),
	(503,2,'Develop a user interface prototype that considers the basic properties of users and devices.'),
	(505,0,'Select appropriate interaction styles input choices, and navigation types for different interfaces and information spaces.'),
	(506,4,'Justify the design decisions made for appropriate interface types.'),
	(507,1,'Recognize the different models of usability.'),
	(509,5,'Apply a user interface design method to develop a user interface prototype.'),
	(508,4,'Identify and contrast different user interface design methods.'),
	(510,2,'Evaluate user interfaces without users.'),
	(544,6,'Select appropriate methodologies given a piece of software and a list of exhibited symptoms.'),
	(517,1,'Select an appropriate architecture for a network application, particularly from among client-server, peer-to-peer, and hybrid systems.'),
	(511,6,'Contrast the role of low and high fidelity prototypes in user design and evaluation.'),
	(527,7,'Explain the operation of SSL.'),
	(515,0,'Identify the elements of network infrastructure, both in the network edge and the network core.'),
	(518,0,'Explain network performance in terms of delay, throughput, and loss, as informed by M/M/1 queuing theory models of the network.'),
	(520,3,'Recognize and integrate features of HTTP, FTP, SMTP, and DNS in other network interactions.'),
	(522,2,'Explain the operation of UDP.'),
	(519,2,'Explain the operation of the HTTP, FTP, DNS, SMTP, POP3, IMAP, and MIME protocols.'),
	(524,0,'Explain and apply the mechanisms for reliable data transfer in the presence of non-malicious network errors.'),
	(521,6,'Explain how peer-to-peer systems, particularly those based on distributed hash tables, locate and exchange resources.'),
	(526,6,'Select deployments of symmetric and asymmetric encryption to provide data confidentiality, data integrity, and non-repudiation in the presence of malicious network activity.'),
	(528,5,'Use sockets to establish exchange data between processes.'),
	(523,3,'Explain the steps and trade-offs involved in error detection.'),
	(535,2,'Implement an appropriate design paradigm given a problem specification.'),
	(534,1,'Select and justify an appropriate design paradigm given a problem specification.'),
	(525,3,'Explain the operation of TCP relative to basic operations, reliable data transfer, flow control, and congestion control.'),
	(539,1,'Describe the various testing methodologies and their purpose.'),
	(529,1,'Estimate network delay and congestion using M/M/1 queuing theory equations.'),
	(530,0,'Describe the shapes and parameters of the following distributions: Poisson, exponential and uniform.'),
	(531,0,'Apply the concept of Expected values to real world problems.'),
	(538,2,'Design a program to solve a problem of moderate complexity given a problem specification.'),
	(532,0,'Describe the concept of variance and jitter.'),
	(533,0,'Describe basic program design paradigms, such as pipe-filter, simulator, event driven, state machine, front-end/back-end, search, client-server, etc.'),
	(537,1,'Execute the program development cycle starting with a problem specification'),
	(541,4,'Implement a test suite for a given module, program, function, or library.'),
	(540,2,'Select an appropriate testing methodology given a problem specification.'),
	(542,4,'Describe the various kinds of software errors that can occur and their causes.'),
	(543,5,'Identify methodologies for dealing with various software errors.'),
	(545,7,'Identify and rectify software errors within a piece of software of moderate complexity.'),
	(546,0,'Explain the role and function of build tools.'),
	(547,4,'Implement moderately complex programs in C.'),
	(550,0,'Write a 1 page text on a specific topic.'),
	(548,3,'Write command pipe-lines comprising multiple tools in the UNIX environment to solve simple problems.'),
	(551,0,'Explain the purpose and function of cryptography.'),
	(549,2,'Design regular expressions and use tools such as grep and sed to manipulate text streams.'),
	(554,0,'Define the terms identification, authentication, and authorization, and distinguish between them.'),
	(555,1,'Describe the purpose, differences, advantages, and disadvantages of capabilities-based and access control list (ACL) based systems.'),
	(558,2,'Use a port scanner and sniffer to identify potential vulnerabilities in a network.'),
	(556,1,'Explain what port scanning, sniffing, and intrusion detection entails.'),
	(559,2,'Explain the purpose and operation of a firewall.'),
	(575,1,'Explain and justify common mobile application development guidelines.'),
	(560,3,'Design and implement a firewall configuration to protect hosts in a Small Office or Home Office (SOHO) environment against common vulnerabilities.'),
	(561,2,'Explain the purpose, setup, and operation of an intrusion detection system (IDS).'),
	(562,2,'Describe the form, function, and purpose of common social engineering attacks, such as pretexting, phishing, baiting, etc.'),
	(564,4,'Describe form, function, advantages, and disadvantages of various best practices, countermeasures, and defenses against social engineering and malware attacks.'),
	(563,3,'Differentiate between various forms of malware such as viruses, worms, trojans, etc.'),
	(565,5,'Formulate an attack on a host using a series of commonly known exploits.'),
	(566,6,'Formulate a defense of a host against a series of commonly known exploits.'),
	(570,8,'Identify the key concepts that are shared by the most common mobile application frameworks.'),
	(574,0,'Identify and discuss user interface issues in mobile computing.'),
	(569,2,'Describe the major steps to designing and developing a mobile application.'),
	(572,5,'Identify challenges in mobile application development and suggest possible solutions to these challenges.'),
	(571,9,'Contrast several popular mobile application frameworks.'),
	(573,4,'Explain important concepts in the area of wireless communication and their impact on mobile computing.'),
	(576,7,'Identify important concepts in distributed computing and explain what impact they have in the mobile computing domain.'),
	(577,10,'Develop simple mobile applications using standard mobile application development frameworks.'),
	(578,11,'Identify future directions in mobile computing.'),
	(579,4,'Living on Sesame Street.'),
	(602,0,'SLO13'),
	(580,2,'This is the % most poorly * Formatted string there is....'),
	(594,2,'SLO5'),
	(592,1,'SLO3'),
	(591,0,'SLO2'),
	(590,0,'SLO1'),
	(598,0,'SLO9'),
	(597,0,'SLO8'),
	(599,0,'SLO10'),
	(600,0,'SLO11'),
	(603,3,'SLO14');

/*!40000 ALTER TABLE `dae_slo` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_slo_tag
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_slo_tag`;

CREATE TABLE `dae_slo_tag` (
  `id` int(11) NOT NULL auto_increment,
  `slo_id` int(10) unsigned NOT NULL,
  `tag_id` int(10) unsigned NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=1135 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_slo_tag` WRITE;
/*!40000 ALTER TABLE `dae_slo_tag` DISABLE KEYS */;

INSERT INTO `dae_slo_tag` (`id`, `slo_id`, `tag_id`)
VALUES
	(141,108,103),
	(137,106,101),
	(139,107,45),
	(142,108,104),
	(22,23,39),
	(220,148,100),
	(14,22,37),
	(15,22,38),
	(23,24,39),
	(24,24,40),
	(25,25,39),
	(26,25,36),
	(27,26,39),
	(28,26,41),
	(29,28,41),
	(30,29,41),
	(31,30,41),
	(32,30,40),
	(33,31,41),
	(34,32,41),
	(36,33,41),
	(37,34,41),
	(38,34,43),
	(39,35,41),
	(40,35,44),
	(103,36,41),
	(42,36,45),
	(43,36,46),
	(44,36,47),
	(45,37,41),
	(46,37,40),
	(47,38,48),
	(48,38,41),
	(50,40,41),
	(51,40,45),
	(293,42,133),
	(56,42,53),
	(666,385,112),
	(683,391,135),
	(1081,420,120),
	(658,382,48),
	(671,386,112),
	(670,386,135),
	(669,386,110),
	(136,105,100),
	(138,107,100),
	(140,108,102),
	(148,110,49),
	(133,102,100),
	(135,104,100),
	(134,103,100),
	(167,39,41),
	(147,110,50),
	(146,110,103),
	(1004,553,149),
	(1003,552,167),
	(1002,552,149),
	(149,111,55),
	(150,111,103),
	(151,111,49),
	(152,112,50),
	(1006,555,149),
	(1000,551,168),
	(999,551,167),
	(158,115,50),
	(159,115,51),
	(160,116,51),
	(558,325,56),
	(163,118,51),
	(164,119,55),
	(165,120,55),
	(166,120,49),
	(214,144,100),
	(219,147,110),
	(218,147,100),
	(217,146,100),
	(216,145,110),
	(233,152,55),
	(224,150,103),
	(223,150,100),
	(228,151,129),
	(231,152,100),
	(215,145,100),
	(221,149,100),
	(230,151,104),
	(229,151,102),
	(226,151,100),
	(225,150,102),
	(234,153,100),
	(235,153,36),
	(237,153,55),
	(238,154,100),
	(239,154,55),
	(240,155,100),
	(241,155,55),
	(243,156,100),
	(244,156,110),
	(245,156,55),
	(246,157,100),
	(247,157,55),
	(249,158,100),
	(251,159,100),
	(252,159,129),
	(253,160,100),
	(254,160,129),
	(255,161,100),
	(256,161,55),
	(551,324,100),
	(553,161,155),
	(552,324,135),
	(292,181,133),
	(291,181,112),
	(263,164,49),
	(264,165,49),
	(265,165,101),
	(266,166,49),
	(268,167,49),
	(550,324,155),
	(288,182,49),
	(271,170,49),
	(672,387,112),
	(273,172,131),
	(274,172,49),
	(275,173,49),
	(277,174,49),
	(278,174,55),
	(1080,419,120),
	(1079,393,120),
	(281,176,49),
	(282,177,49),
	(283,178,49),
	(284,178,55),
	(285,179,49),
	(676,389,110),
	(1086,377,144),
	(289,183,132),
	(1097,590,178),
	(294,184,132),
	(1103,593,181),
	(1102,593,179),
	(1078,382,120),
	(668,385,110),
	(667,385,146),
	(1077,267,120),
	(301,188,135),
	(1076,262,120),
	(303,189,135),
	(1075,261,120),
	(305,191,49),
	(306,191,95),
	(307,191,51),
	(308,192,49),
	(662,384,112),
	(661,383,48),
	(660,383,110),
	(312,194,49),
	(314,195,49),
	(315,195,112),
	(316,196,49),
	(575,338,49),
	(318,197,49),
	(577,340,156),
	(320,198,49),
	(574,337,49),
	(322,199,49),
	(323,199,55),
	(324,200,49),
	(664,384,110),
	(663,384,146),
	(328,202,49),
	(576,339,156),
	(330,202,51),
	(675,388,110),
	(674,388,112),
	(673,387,110),
	(678,389,135),
	(1074,390,120),
	(336,205,131),
	(682,391,110),
	(681,390,135),
	(1073,389,120),
	(679,390,110),
	(341,208,131),
	(342,209,55),
	(343,210,55),
	(345,211,55),
	(346,212,55),
	(347,213,55),
	(348,213,51),
	(349,214,55),
	(350,215,49),
	(352,216,55),
	(353,217,49),
	(584,344,51),
	(355,218,49),
	(356,219,136),
	(357,219,38),
	(358,220,136),
	(359,221,136),
	(360,222,137),
	(361,222,136),
	(362,223,137),
	(363,223,136),
	(364,224,138),
	(365,224,49),
	(366,225,138),
	(367,225,135),
	(368,226,49),
	(369,226,138),
	(370,226,135),
	(371,227,138),
	(372,227,49),
	(373,227,135),
	(375,228,49),
	(376,228,138),
	(377,228,135),
	(378,229,137),
	(379,229,139),
	(380,230,139),
	(381,230,137),
	(382,231,49),
	(383,231,139),
	(384,232,135),
	(385,232,139),
	(386,232,49),
	(387,233,137),
	(388,233,139),
	(389,234,37),
	(390,235,38),
	(391,235,37),
	(392,235,36),
	(393,236,36),
	(394,236,119),
	(395,238,140),
	(396,238,50),
	(397,239,136),
	(398,239,140),
	(399,239,50),
	(400,240,140),
	(401,240,141),
	(402,241,140),
	(403,241,141),
	(404,242,137),
	(405,243,137),
	(406,244,137),
	(429,245,137),
	(408,245,36),
	(409,245,119),
	(410,246,137),
	(411,246,50),
	(412,247,137),
	(413,247,50),
	(414,248,36),
	(415,248,143),
	(416,248,137),
	(417,249,36),
	(418,249,37),
	(419,249,137),
	(1101,592,180),
	(1100,592,179),
	(1096,590,177),
	(1099,591,178),
	(424,252,36),
	(425,252,37),
	(426,252,39),
	(1098,591,177),
	(428,244,39),
	(430,245,39),
	(431,252,38),
	(432,249,38),
	(433,253,38),
	(434,253,36),
	(435,254,38),
	(436,254,36),
	(437,255,38),
	(438,255,36),
	(439,255,39),
	(440,256,55),
	(441,257,55),
	(442,258,55),
	(443,259,55),
	(444,260,55),
	(1072,384,120),
	(447,261,55),
	(1071,189,120),
	(449,263,129),
	(452,265,129),
	(453,265,135),
	(454,266,135),
	(1070,188,120),
	(456,267,135),
	(457,268,135),
	(458,268,100),
	(459,268,145),
	(460,269,146),
	(461,270,147),
	(462,270,135),
	(463,271,148),
	(464,271,147),
	(465,272,148),
	(466,273,147),
	(467,273,149),
	(469,274,146),
	(470,275,150),
	(471,276,150),
	(472,277,151),
	(473,278,151),
	(474,279,55),
	(476,279,49),
	(477,280,55),
	(479,280,49),
	(481,281,49),
	(482,282,55),
	(484,282,49),
	(485,283,55),
	(487,283,49),
	(488,284,55),
	(490,284,49),
	(657,382,110),
	(1069,186,120),
	(1134,603,196),
	(494,286,56),
	(495,280,146),
	(1133,580,183),
	(497,287,56),
	(1132,580,186),
	(499,288,56),
	(1131,580,187),
	(501,289,49),
	(502,289,146),
	(1130,580,184),
	(504,290,49),
	(505,290,146),
	(506,291,50),
	(507,291,152),
	(508,292,50),
	(509,292,152),
	(510,293,153),
	(511,294,153),
	(512,295,153),
	(513,296,153),
	(514,297,153),
	(515,298,50),
	(516,298,152),
	(517,299,154),
	(518,298,154),
	(519,300,154),
	(520,301,154),
	(521,302,154),
	(522,303,49),
	(523,304,49),
	(524,305,37),
	(525,306,153),
	(526,306,38),
	(527,306,37),
	(528,307,38),
	(529,308,38),
	(530,309,133),
	(531,310,133),
	(532,310,112),
	(533,311,112),
	(534,311,133),
	(535,312,133),
	(536,312,112),
	(537,313,133),
	(538,313,112),
	(539,314,133),
	(540,314,112),
	(541,315,133),
	(542,316,133),
	(543,317,133),
	(544,317,112),
	(545,318,133),
	(546,319,133),
	(547,319,112),
	(554,107,155),
	(555,324,155),
	(556,105,155),
	(927,501,160),
	(926,501,137),
	(561,328,36),
	(562,328,153),
	(563,329,153),
	(564,330,36),
	(565,330,153),
	(566,327,153),
	(567,327,37),
	(1129,602,195),
	(570,333,49),
	(571,334,49),
	(572,335,49),
	(578,341,131),
	(579,341,49),
	(580,342,131),
	(581,342,49),
	(582,343,49),
	(583,343,131),
	(585,344,131),
	(586,345,55),
	(587,346,129),
	(588,347,150),
	(589,348,150),
	(590,348,129),
	(591,349,157),
	(592,349,150),
	(593,350,150),
	(594,351,129),
	(595,351,150),
	(596,352,157),
	(597,352,150),
	(598,353,150),
	(599,354,150),
	(600,354,112),
	(601,355,150),
	(602,356,150),
	(603,357,150),
	(604,358,150),
	(605,359,112),
	(606,359,150),
	(607,360,150),
	(608,361,150),
	(609,362,150),
	(610,363,150),
	(611,364,150),
	(612,365,150),
	(613,365,135),
	(614,366,150),
	(615,367,150),
	(616,368,154),
	(617,369,154),
	(618,369,153),
	(619,370,154),
	(620,370,153),
	(621,371,154),
	(622,371,50),
	(623,371,36),
	(624,372,154),
	(625,373,50),
	(626,373,154),
	(627,374,154),
	(628,375,50),
	(629,375,154),
	(630,376,51),
	(631,376,158),
	(632,376,154),
	(633,377,51),
	(634,377,154),
	(635,378,154),
	(636,378,153),
	(637,378,157),
	(638,379,157),
	(639,379,154),
	(640,380,157),
	(641,380,153),
	(642,380,154),
	(643,381,154),
	(644,381,153),
	(645,298,51),
	(646,246,51),
	(647,375,51),
	(648,110,51),
	(998,550,38),
	(650,115,51),
	(651,371,51),
	(1001,551,149),
	(653,112,51),
	(654,373,51),
	(1005,554,149),
	(684,392,110),
	(685,392,135),
	(1068,264,120),
	(687,393,110),
	(688,393,146),
	(689,393,49),
	(690,393,135),
	(691,394,110),
	(692,394,135),
	(693,394,100),
	(694,395,110),
	(695,395,135),
	(696,395,100),
	(697,396,110),
	(698,396,49),
	(699,396,135),
	(700,396,100),
	(701,397,51),
	(702,397,49),
	(703,397,146),
	(704,397,135),
	(705,397,110),
	(706,397,100),
	(707,398,51),
	(708,398,49),
	(709,398,100),
	(710,398,135),
	(711,398,146),
	(712,398,110),
	(713,399,36),
	(714,400,36),
	(715,400,38),
	(716,401,36),
	(717,402,36),
	(718,403,36),
	(1085,378,144),
	(720,405,36),
	(721,406,36),
	(722,406,38),
	(723,406,37),
	(724,407,36),
	(725,407,38),
	(726,408,38),
	(727,408,36),
	(728,409,36),
	(729,410,143),
	(730,411,143),
	(731,412,143),
	(732,413,143),
	(733,414,143),
	(734,415,100),
	(735,415,49),
	(736,415,146),
	(737,415,135),
	(738,416,100),
	(739,416,135),
	(740,416,49),
	(741,416,146),
	(742,417,100),
	(743,417,135),
	(744,417,49),
	(745,418,136),
	(1067,265,120),
	(747,420,136),
	(1066,383,120),
	(749,421,136),
	(750,421,49),
	(751,422,136),
	(752,422,49),
	(753,423,136),
	(754,423,49),
	(755,424,136),
	(756,425,136),
	(757,425,159),
	(758,426,136),
	(759,426,137),
	(760,427,136),
	(761,427,49),
	(762,428,136),
	(763,428,49),
	(764,429,136),
	(765,429,49),
	(766,430,136),
	(767,430,131),
	(768,430,49),
	(769,431,136),
	(770,431,49),
	(771,431,150),
	(772,432,136),
	(773,432,149),
	(774,433,136),
	(775,433,49),
	(776,434,136),
	(777,434,49),
	(778,435,136),
	(779,435,49),
	(780,436,136),
	(781,436,49),
	(782,437,136),
	(783,437,49),
	(784,438,136),
	(785,438,49),
	(786,439,136),
	(787,439,49),
	(788,440,154),
	(789,440,102),
	(790,440,160),
	(791,440,49),
	(792,441,154),
	(793,441,102),
	(794,441,49),
	(795,442,154),
	(796,442,102),
	(797,442,49),
	(798,443,154),
	(799,443,102),
	(800,443,49),
	(801,444,154),
	(802,444,102),
	(803,444,49),
	(804,445,154),
	(805,445,102),
	(806,445,49),
	(807,446,154),
	(808,446,102),
	(809,446,49),
	(810,447,154),
	(811,447,102),
	(812,447,49),
	(813,448,154),
	(814,448,49),
	(815,448,102),
	(816,449,49),
	(817,449,102),
	(818,449,154),
	(819,450,154),
	(820,450,102),
	(821,450,49),
	(822,451,154),
	(823,451,102),
	(824,451,49),
	(825,452,154),
	(826,452,102),
	(827,452,49),
	(828,453,154),
	(829,453,102),
	(830,453,49),
	(831,454,154),
	(832,454,102),
	(833,454,49),
	(834,455,154),
	(835,455,102),
	(836,455,49),
	(837,456,154),
	(838,456,49),
	(839,456,160),
	(840,457,154),
	(841,457,102),
	(842,457,49),
	(843,457,160),
	(844,444,160),
	(845,448,160),
	(846,447,160),
	(847,458,145),
	(848,458,102),
	(849,459,135),
	(850,459,102),
	(851,460,161),
	(852,460,102),
	(853,459,161),
	(1128,602,193),
	(1127,600,194),
	(856,462,101),
	(857,463,101),
	(1126,600,193),
	(859,464,163),
	(860,464,102),
	(1125,600,189),
	(862,465,101),
	(863,466,102),
	(864,466,163),
	(865,467,102),
	(866,467,49),
	(867,468,102),
	(868,468,161),
	(869,469,102),
	(1124,593,187),
	(871,470,102),
	(872,470,49),
	(873,471,49),
	(874,471,102),
	(875,472,49),
	(876,472,102),
	(877,473,102),
	(878,473,49),
	(879,474,102),
	(880,474,49),
	(881,475,49),
	(882,475,102),
	(883,476,49),
	(884,476,102),
	(885,477,102),
	(886,477,49),
	(887,477,112),
	(888,478,112),
	(889,478,102),
	(890,478,49),
	(1123,593,186),
	(892,479,56),
	(1122,592,189),
	(894,480,133),
	(895,481,133),
	(896,482,56),
	(1121,599,192),
	(898,483,56),
	(1120,599,191),
	(900,484,56),
	(1119,590,191),
	(902,485,56),
	(1118,590,190),
	(904,486,56),
	(1116,598,188),
	(906,487,112),
	(1115,598,184),
	(1114,597,187),
	(909,488,53),
	(967,534,50),
	(966,533,50),
	(912,490,55),
	(1113,597,186),
	(1112,595,184),
	(1111,596,187),
	(1110,596,186),
	(917,494,164),
	(1117,590,189),
	(919,496,55),
	(1108,591,184),
	(969,535,50),
	(968,534,154),
	(945,513,147),
	(1107,594,181),
	(1106,594,180),
	(928,502,137),
	(929,502,160),
	(930,502,165),
	(931,503,137),
	(932,503,165),
	(933,504,165),
	(934,505,165),
	(935,505,160),
	(936,506,165),
	(937,507,137),
	(938,507,165),
	(939,508,165),
	(940,509,165),
	(941,510,166),
	(942,510,165),
	(943,511,165),
	(944,512,165),
	(946,514,147),
	(947,515,147),
	(1087,531,144),
	(949,517,147),
	(950,518,147),
	(951,519,147),
	(952,520,147),
	(953,521,147),
	(954,522,147),
	(955,523,147),
	(956,524,147),
	(957,525,147),
	(958,526,147),
	(959,527,147),
	(960,528,147),
	(961,529,147),
	(962,529,164),
	(963,530,54),
	(964,531,54),
	(965,532,54),
	(970,535,160),
	(971,533,160),
	(972,534,160),
	(978,538,154),
	(977,538,50),
	(975,537,50),
	(976,537,154),
	(979,539,166),
	(980,539,154),
	(981,540,166),
	(982,540,154),
	(983,541,166),
	(984,541,154),
	(985,542,49),
	(986,543,154),
	(987,544,49),
	(988,544,50),
	(989,545,49),
	(990,545,50),
	(991,546,49),
	(992,547,49),
	(993,548,155),
	(994,548,50),
	(995,548,49),
	(996,549,155),
	(997,549,49),
	(1007,556,149),
	(1008,556,147),
	(1009,556,148),
	(1010,557,148),
	(1011,557,147),
	(1012,558,147),
	(1013,558,148),
	(1014,558,149),
	(1015,559,149),
	(1016,559,147),
	(1017,559,148),
	(1018,560,147),
	(1019,560,148),
	(1020,560,149),
	(1021,561,147),
	(1022,561,148),
	(1023,561,149),
	(1024,562,149),
	(1025,562,147),
	(1026,562,148),
	(1027,563,149),
	(1028,563,148),
	(1029,564,149),
	(1030,564,148),
	(1031,565,149),
	(1032,565,148),
	(1033,566,149),
	(1034,566,148),
	(1035,567,169),
	(1105,593,183),
	(1037,569,51),
	(1038,569,169),
	(1039,570,169),
	(1040,570,50),
	(1041,570,160),
	(1042,570,51),
	(1043,571,160),
	(1044,571,169),
	(1045,571,50),
	(1046,571,51),
	(1047,572,169),
	(1048,572,147),
	(1049,572,36),
	(1050,572,56),
	(1051,572,110),
	(1052,573,147),
	(1053,573,169),
	(1054,574,169),
	(1055,574,165),
	(1056,575,169),
	(1057,575,165),
	(1058,576,169),
	(1059,576,147),
	(1060,576,149),
	(1061,577,169),
	(1062,577,51),
	(1104,593,182),
	(1064,578,169),
	(1065,578,39);

/*!40000 ALTER TABLE `dae_slo_tag` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_tag
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_tag`;

CREATE TABLE `dae_tag` (
  `id` int(11) NOT NULL auto_increment,
  `tag_label` varchar(100) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=197 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_tag` WRITE;
/*!40000 ALTER TABLE `dae_tag` DISABLE KEYS */;

INSERT INTO `dae_tag` (`id`, `tag_label`)
VALUES
	(104,'compilation'),
	(103,'C programming'),
	(102,'language'),
	(100,'OS'),
	(101,'text'),
	(36,'communication'),
	(37,'soft skills'),
	(38,'writing'),
	(39,'research'),
	(40,'multidisciplinary'),
	(41,'bioinformatics'),
	(179,'tag3'),
	(43,'phylogeny'),
	(44,'genomics'),
	(45,'scripting'),
	(46,'perl'),
	(47,'python'),
	(48,'information theory'),
	(49,'programming'),
	(50,'software'),
	(51,'development'),
	(135,'systems'),
	(53,'graphs'),
	(54,'statistics'),
	(55,'data structures'),
	(56,'complexity'),
	(57,'theory'),
	(136,'web'),
	(95,'java'),
	(133,'mathematics'),
	(110,'computer architecture'),
	(132,'pre-requisite'),
	(112,'logic'),
	(131,'OOP'),
	(119,'Computer Science'),
	(120,'basics'),
	(129,'data'),
	(137,'usability'),
	(138,'robotics'),
	(139,'gaming'),
	(140,'social computing'),
	(141,'social impacts'),
	(145,'history'),
	(143,'ethics'),
	(144,'data analyis'),
	(146,'problem solving'),
	(147,'network'),
	(148,'internet'),
	(149,'security'),
	(150,'database'),
	(151,'graphics'),
	(152,'industry'),
	(153,'project management'),
	(154,'software engineering'),
	(155,'UNIX'),
	(156,'career'),
	(157,'business'),
	(158,'system'),
	(159,'multimedia'),
	(160,'design'),
	(161,'compilers'),
	(178,'tag2'),
	(163,'grammar'),
	(164,'probability'),
	(165,'human computer interaction'),
	(166,'testing'),
	(167,'cryptography'),
	(168,'information'),
	(169,'mobile computing'),
	(177,'tag1'),
	(180,'tag4'),
	(181,'tag5'),
	(182,'tag6'),
	(183,'tag7'),
	(184,'tag10'),
	(189,'tag12'),
	(186,'tag8'),
	(187,'tag9'),
	(188,'tag11'),
	(190,'tag13'),
	(191,'tag14'),
	(192,'tag15'),
	(193,'tag16'),
	(194,'tag17'),
	(195,'tag18'),
	(196,'tag19');

/*!40000 ALTER TABLE `dae_tag` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_term_review_form
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_term_review_form`;

CREATE TABLE `dae_term_review_form` (
  `id` int(11) NOT NULL auto_increment,
  `course` varchar(160) default NULL,
  `instructor` varchar(200) default NULL,
  `term` varchar(30) default NULL,
  `year` int(11) default NULL,
  `info` text,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_term_review_form` WRITE;
/*!40000 ALTER TABLE `dae_term_review_form` DISABLE KEYS */;

INSERT INTO `dae_term_review_form` (`id`, `course`, `instructor`, `term`, `year`, `info`)
VALUES
	(6,'80','cblouin','Fall',2010,'This course should be available in year 3.'),
	(7,'118','root','Winter',2012,'Forgot to cover spelling and the word of the day :(');

/*!40000 ALTER TABLE `dae_term_review_form` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_term_review_ratings
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_term_review_ratings`;

CREATE TABLE `dae_term_review_ratings` (
  `id` int(11) NOT NULL auto_increment,
  `term_review_form_id` int(10) unsigned NOT NULL,
  `slo` text,
  `rating` int(10) unsigned NOT NULL,
  `comment` varchar(160) default NULL,
  `type` varchar(6) default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=95 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_term_review_ratings` WRITE;
/*!40000 ALTER TABLE `dae_term_review_ratings` DISABLE KEYS */;

INSERT INTO `dae_term_review_ratings` (`id`, `term_review_form_id`, `slo`, `rating`, `comment`, `type`)
VALUES
	(66,6,'Determine the computational complexity of an algorithm. <small><b>(deleted)</b></small>',1,'Minimal understanding of the concept at the beginning of the term.','prereq'),
	(67,6,'Apply basic concepts of probability and inferrence. <small><b>(deleted)</b></small>',2,'','prereq'),
	(68,6,'Describe common algorithms and data structures in Computer Science. <small><b>(deleted)</b></small>',2,'','prereq'),
	(69,6,'Describe how dynamic programming can be applied to concrete problems. <small><b>(deleted)</b></small>',2,'','prereq'),
	(70,6,'107',2,'','prereq'),
	(71,6,'24',2,'','taught'),
	(72,6,'23',2,'','taught'),
	(73,6,'25',2,'','taught'),
	(74,6,'28',2,'','taught'),
	(75,6,'26',2,'','taught'),
	(76,6,'29',0,'ran out of time.','taught'),
	(77,6,'30',2,'','taught'),
	(78,6,'31',2,'','taught'),
	(79,6,'33',2,'','taught'),
	(80,6,'32',2,'','taught'),
	(81,6,'34',2,'','taught'),
	(82,6,'36',2,'','taught'),
	(83,6,'37',2,'','taught'),
	(84,6,'38',2,'','taught'),
	(85,6,'39',2,'','taught'),
	(86,6,'40',2,'','taught'),
	(87,7,'313',2,'','prereq'),
	(88,7,'312',2,'','prereq'),
	(89,7,'293',2,'','prereq'),
	(90,7,'359',2,'','prereq'),
	(91,7,'481',2,'','taught'),
	(92,7,'Apply high school algebra. <small><b>(deleted)</b></small>',2,'','taught'),
	(93,7,'296',2,'','taught'),
	(94,7,'579',2,'Ya Know It!','taught');

/*!40000 ALTER TABLE `dae_term_review_ratings` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table dae_valid_course_codes
# ------------------------------------------------------------

DROP TABLE IF EXISTS `dae_valid_course_codes`;

CREATE TABLE `dae_valid_course_codes` (
  `id` int(11) NOT NULL auto_increment,
  `course_code` varchar(4) NOT NULL,
  `department_name` varchar(150) default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=121 DEFAULT CHARSET=utf8;

LOCK TABLES `dae_valid_course_codes` WRITE;
/*!40000 ALTER TABLE `dae_valid_course_codes` DISABLE KEYS */;

INSERT INTO `dae_valid_course_codes` (`id`, `course_code`, `department_name`)
VALUES
	(1,'ARGI','Argiculture'),
	(2,'ANAT','Anatomy'),
	(3,'ARTC','Applied Health Services Research'),
	(4,'ARBC','Arabic'),
	(5,'ARCH','Architecture'),
	(6,'ASSC','Arts And Social Sciences'),
	(7,'BIOC','Biochem And Molecular Biology'),
	(8,'BIOT','Bio Ethics'),
	(9,'BIOE','Biological Engineering'),
	(10,'BIOL','Biology'),
	(11,'BMNG','Biomedical Engineering'),
	(12,'BUSI','Business Admin'),
	(13,'CANA','Canadian Studies'),
	(14,'CNLT','Centre For Learning And Teaching'),
	(15,'CHEE','Chemical Engineering'),
	(16,'CHEM','Chemistry'),
	(17,'CHIN','Chineese'),
	(18,'CIVL','Civil Engineering'),
	(19,'CLAS','Classics'),
	(20,'COMM','Commerce'),
	(21,'CH&E','Community Health&Epidemiology'),
	(22,'CPST','Complementary Studies'),
	(23,'CSCI','Computer Science'),
	(24,'CTMP','Contemporary Studies'),
	(25,'CRWR','Creative Writing'),
	(26,'DEHY','Dental Hygiene'),
	(27,'DENT','Dentistry'),
	(28,'DMUT','Diag Med Ultrasound Tech'),
	(29,'DCYT','Diagnostic Cytology'),
	(30,'DISM','Disability Management'),
	(31,'EMSP','Early Modern Studies'),
	(32,'ERTH','Earth Studies'),
	(33,'ECON','Economics'),
	(34,'ECED','Elictrical & Computer Engineer'),
	(35,'ECMM','Electronic Commerce'),
	(36,'ENGI','Engineering'),
	(37,'INWK','Engineering Interworking'),
	(38,'ENGM','Engineering Mathematics'),
	(39,'ENGL','English'),
	(40,'ENVE','Environmental Engineering'),
	(41,'ENVS','Environmental Science'),
	(42,'ENVI','Environmental Studies'),
	(43,'EURO','European Studies'),
	(44,'FOSC','Food Science'),
	(45,'FREN','French'),
	(46,'GWST','Gender & Woman\'s Studies'),
	(47,'GEOG','Geography'),
	(48,'GERM','German'),
	(49,'HESA','Health Administration'),
	(50,'HINF','Health Informatics'),
	(51,'HLTH','Health Professions'),
	(52,'HPRO','Health Promotion'),
	(53,'HSCE','Health Science Education'),
	(54,'HAHP','Health And Human Performance'),
	(55,'HSTC','History Of Science & Technology'),
	(56,'HIST','History'),
	(57,'HUCD','Human Communication Disorders'),
	(58,'IENG','Industrial Engineering'),
	(59,'INFX','Informatics'),
	(60,'INFO','Information Management'),
	(61,'INTE','Interdisc Studies (graduate)'),
	(62,'IDIS','Interdiscplinary Studies'),
	(63,'INTD','International Development Studies'),
	(64,'ITAL','Italian'),
	(65,'JOUR','Journalism'),
	(66,'KINE','Kinesiology'),
	(67,'KING','King\'s Foundation Year Program'),
	(68,'LAWS','Law'),
	(69,'LEIS','Leisure Studies'),
	(70,'MGMT','Management'),
	(71,'MARA','Marine Affairs'),
	(72,'MARI','Marine Biology'),
	(73,'MATL','Materials Engineering'),
	(74,'MATH','Mathematics'),
	(75,'MECH','Mechanical Engineering'),
	(76,'MDLT','Medical Lab Technology'),
	(77,'MEDS','Medical Science'),
	(78,'MICI','Microbiology & Immunology'),
	(79,'MINE','Mineral Resource Engineering'),
	(80,'MUSC','Music'),
	(81,'NESC','Neuroscience'),
	(82,'NUMT','Nuclear Medicine Technology'),
	(83,'NURS','Nursing'),
	(84,'OCCU','Occupation Theorapy'),
	(85,'OCEA','Oceanography'),
	(86,'ORAL','Oral Surgery'),
	(87,'PHDP','Phd Program'),
	(88,'PATH','Pathology'),
	(89,'PETR','Petroleum Engineering'),
	(90,'PHAC','Pharmacology'),
	(91,'PHAR','Pharmacy'),
	(92,'PHIL','Philosophy'),
	(93,'PHYC','Physics & Atmospheric Science'),
	(94,'PHYL','Physiology'),
	(95,'PHYT','Physiotherapy'),
	(96,'PLAN','Planning'),
	(97,'POLI','Political Science'),
	(98,'PGPH','Post-graduate Phramacy'),
	(99,'PEAS','Process Engineering & App Science'),
	(100,'PROS','Prosthodontics'),
	(101,'PSYO','Psychology'),
	(102,'PUAD','Public Administration'),
	(103,'RADT','Radiological Technology'),
	(104,'REGN','Registration Course-graduate'),
	(105,'RELS','Religion Studies'),
	(106,'RSCH','Research Class For Pdf\'s'),
	(107,'RSPT','Respiratory Therapy'),
	(108,'RUSN','Russian Studies'),
	(109,'SCIE','Science'),
	(110,'SLWK','Social Work'),
	(111,'SOSA','Sociol & Social Anthropology'),
	(112,'SPAN','Spanish'),
	(113,'STAT','Statistics'),
	(114,'SUST','Sustainability'),
	(115,'THEA','Theatre'),
	(116,'TYPR','Transition Year Program'),
	(117,'VISC','Vision Science'),
	(118,'TEMP','Temporary For Testing'),
	(119,'RAND','Unknown'),
	(120,'PREU','Pre-University skills');

/*!40000 ALTER TABLE `dae_valid_course_codes` ENABLE KEYS */;
UNLOCK TABLES;



/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;

